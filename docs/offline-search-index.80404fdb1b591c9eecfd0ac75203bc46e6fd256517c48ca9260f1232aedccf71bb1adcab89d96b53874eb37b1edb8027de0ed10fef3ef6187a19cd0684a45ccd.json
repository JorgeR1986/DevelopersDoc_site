[{"body":"Prerequisites  You need an active account in PayU Latam. Checkout is not available in Trial plans. You need a valid plan in Shopify.  Order management in Shopify Take into account the following when managing orders in Shopify:\n All orders: are the orders with state Approved (fully or partially paid) and Pending (while the payer backs to the store after processing the payment in the gateway). Abandoned checkouts: are payment procedures which meet any of the following criteria:  Uncompleted checkouts. Checkouts abandoned during the payment process. Transactions with Rejected state. Transactions with Pending state as long as the payer does not return to the store after processing the payment in the gateway:\n4.1. Cash Payments (always return Pending state).\n4.2. Credit Card payments that are subject to fraud analysis.    Enable PayU as Payment gateway  Enter to your Shopify admin site. Click Settings and then, select Payments.  Go to the Third-party providers section and click Choose third-party provider.  In the list, find and click the PayU Latam gateway.  Provide the following information of your PayU account:   Account Id (1): ID of the PayU account according to the country where you want to sell. Api Key (2): Unique key of your commerce, you can get this information in your PayU Module (Settings \u0026gt; Technical configuration \u0026gt; API Key).  Finally, click Activate PayU Latam button at the bottom of the page.  Open the PayU module and go to the Configuration options (Settings \u0026gt; Technical configuration). Then, disable the validation of unique reference for all states, to avoid issues at the moment of processing your payments.  At this point, your customers can make payments through the PayU Checkout. They are able to pay using payment options including cash, credit cards and bank transfers, depending on the country where you are selling.\nPayment flow in Shopify. When you configure PayU as payment gateway in platform, your customer can pay using PayU platform as explained below.\n Your customer selects the product or service they want to buy and add it to their shopping cart.  In the shopping cart, you customer proceeds to the check out.  Once your customer provides their information, they can click Complete order to be redirected to PayU Latam to complete the payment.  When they are in our payment gateway, they can see the sale description and the available payment methods according to the selected country.  ","excerpt":"Prerequisites  You need an active account in PayU Latam. Checkout is not available in Trial plans. â€¦","ref":"/docs/tools/shopping-cart-plugins/shopify.html","title":"Shopify"},{"body":"You can choose to receive a total payment or send your customers a detailed description of the sale. You can send your payment request via email or generate a link to share it in chat rooms or social networks. Once your customer receives it, they can make the payment through our secure payment system.\nWith the Payment Request, you have the following benefits:\n Sell online regardless if you don\u0026rsquo;t have a website using email, social networks or, message exchange platforms. Offer several payment methods. Discriminate the payments you receive so you can know who pays what and when.  How does the Payment request work? The Payment request follows a simple flow to let your customers buy your products or services using the secure PayU platform:\n  Generate the Payment request through the PayU module. For a basic payment request, you only need to provide what you want to sell, its price, and decide whether your payment includes taxes or an expiration date. If you want to include additional information such as shipping, payment reference, comments, and more, you can create a Custom payment request.\n  Once the link has been generated, you can share it with your customers either by email, posting the link on social networks, or including this link in your website (if you have one).\n  When your customers use the link, they are redirected to the PayU\u0026rsquo;s checkout page, where they can pay using any of the available payment methods.\n  Every time a customer pays using the link, you receive a confirmation message and the amount of the purchase* is transferred to your PayU account, where you can transfer it to your bank account.\n  *The value transferred corresponds to the amount paid by your customer minus the PayU fee.\nCreating payment requests According to your business needs, you can create two types of Payment requests: Basic and Custom.\nA Basic Payment Request lets you create a link just by providing the product\u0026rsquo;s name and price; furthermore, you can decide whether you need to include taxes or whether the link may expire in the future. The Custom Payment Request is a payment link with extra information such as shipping information, payment reference, response pages, comments or narrow down the available payment methods.\nCreate a Basic Payment Request Follow the next procedure to create a Basic Payment Request and share it with your customers.\n  Log in to PayU.com and click the login option located at the top of the page. Alternatively, you can log in to https://merchants.payulatam.com/.\n  Expand the Sell with PayU option and then, select Sell on the internet.\n  Provide the following information:    What are you going to sell?: description of the product you want to sell using this payment request.\n  What is the price?: provide the amount of the product and select the currency.\n  Do you charge tax?: choose if the product price includes taxes. If so, select the percentage or fixed amount of the taxes.\n  Payment deadline: choose if the Payment request expires in a given time. If so, select the date and time when the Payment request expires.\n  Click Generate Link.  Create a Custom Payment Request Follow the next procedure to create a Basic Payment Request and share it with your customers.\n  Follow steps 1 to 3 of the Create a Basic Payment Request procedure.\n  Click I want to customize my link option. The advanced options appears where you can provide the following information\n   Do you ship your products: this option lets you select whether the shipping information of the product is included in the link. When selecting YES, you can set a fixed shipping amount, and select if the customer must provide the shipping address.   Payment reference: this option lets you decide if you want to set a specific Payment reference for the link.   Transaction redirects: in this option you can set the URLs of the customized response pages you have when a transaction is approved, declined or pending. These fields are not mandatory and if you don\u0026rsquo;t set a URL, the transaction is redirected to the default PayU\u0026rsquo;s response pages.   Buyer comments: this option allows the buyer to add comments related to the purchase. The field where the buyer can add comments can be set in English, Spanish or Portuguese.\nFor example, you can configure this field to let the customer specify a particular description of the product.   Select the available payment methods: this option lets you include or exclude the available payment methods according to your country. For example, if you only want to receive payments through credit cards.\nBy default, all the available payment methods of your country are selected.  Click Generate Link.  Sharing the Payment request After you have configured and generated the Payment request, a confirmation page appears where you can perform the following actions:\n Share on social media with a link: using this option, you can copy the recently generated link, post an update on Facebook, publishing a tweet on Twitter or send it to several email addresses.  Note When selecting Facebook or Twitter, you will be prompted to provide the credentials of the account where you want to publish the link.   Publish a button in my webpage: if you have a webpage and you want to include the generated link, PayU lets you create a button which you can added somewhere in your page. You can use any of the preloaded images provided by PayU or upload one using the Custom image option.\nThen, click Copy HTML to copy the button code in your clipboard.  Creating multiple Payment requests The PayU module allows you to create multiple payment request at one time so you can easily include several products in your shop. Links created using these features can only be sent via Email.\nTo create multiple payment links, expand the Sell with PayU option and then, select Sell on the internet. Then, select the option Create multiple payment links.\nTo create multiple payment links at once, you just need to upload a .csv file with all the information of each product you want to sell. You can download an example of how PayU expects the information by clicking Download format.\nThe Excel file downloaded is by default in Spanish and each row corresponds to a link. The following table explains each column in it. Recall that the columns marked with asterisk are mandatory and if you leave empty a column, this property is not included in the link.\n   Name Column Description     Buyer\u0026rsquo;s email A The email address to which the Payment link will be sent.   What are you going to sell? B Name or description of the product you want to sell.   What does the product cost? C Price of the product you offer.   Currency D Currency of the product\u0026rsquo;s amount.\nPossible values: COP, USD, PEN, ARS, BRL, and MXN   Tax type E Let\u0026rsquo;s you define if you include taxes in your product.Set Fijo to add a fixed value.Set Porcentaje to add a percentage value.   Tax value F Value of the tax according to the tax type specified.   Due date G Set the due date of the link using the format dd/MM/yy HH:mm.   Redirect on success H Set the URL to which you customers will be redirected when the transaction is successful.   Redirect on failure I Set the URL to which you customers will be redirected when the transaction fails.   Redirect on pending J Set the URL to which you customers will be redirected when the transaction is pending.   Ask for shipping address K Set Si to request delivery address to the payer. Otherwise, set No or leave it empty.   Shipping value L Set a fixed value for shipping in the same currency of the product price.   Let payers add comments M Set Si to let the payers add comments. Otherwise, set No or leave it empty.   Label for payer\u0026rsquo;s comments (ES) N Set the label for the payer\u0026rsquo;s comments field in Spanish.   Label for payer\u0026rsquo;s comments (EN) O Set the label for the payer\u0026rsquo;s comments field in English.   Label for payer\u0026rsquo;s comments (PT) P Set the label for the payer\u0026rsquo;s comments field in Portuguese.   Extra 1 Q Set any additional string data to be included in the link. This column cannot exceed 120 characters.   Extra 2 R Set any additional string data to be included in the link. This column cannot exceed 120 characters.   Select payment methods. S If you leave this column empty, all the payment methods active for the account will be included.To include some payment methods, set the payment methods separated by commas.\nExample: LENDING,VISA,BANK_REFERENCED,AMEX.\nFurthermore, you can define what installments to submit for credit card, to do this, enter the payment methods and indicate the installments you want to be available separated by hyphens.\nExample: VISA-1-2-3,AMEX.    Note You can create up to 1000 links per file.  Once you have completed the Excel file, upload it to the PayU Module and click Send payment links.\n","excerpt":"You can choose to receive a total payment or send your customers a detailed description of the sale. â€¦","ref":"/docs/tools/payment-request.html","title":"Payment Request"},{"body":"Response codes for transactions    Response code Description     ERROR General error   APPROVED The transaction was approved   ANTIFRAUD_REJECTED The transaction was rejected by the anti-fraud system.    Accepted currencies    Currency Description     ARS Argentine Peso   BRL Brazilian Real   CLP Chilean Peso   COP Colombian Peso   MXN Mexican Peso   PEN Peruvian Nuevo Sol   USD US Dollar    Supported Languages    ISO code 639 Language     en English   es Spanish   pt Portuguese    Document types    ISO Description Country     CC Citizenship card. Colombia   CE Foreign citizenship card. Colombia, Peru   CEL When identified by the mobile line. Colombia   CEP Electronic Payment Receipt Mexico   CI Identity Card. Argentina, Chile   CNPJ National Register of Legal Entities Brazil   CPF Registration of Individuals Brazil   CUIL Unique Labor Identification Code Argentina   CUIT Single Tax identification Argentina   CURP Unique Population Registry Code Mexico   DE Foreing Identifiaction Number Peru   DL Driver License    DNI National Identity Document Argentina, Peru, Chile   DNIE National Identity Document - Electronical Argentina, Peru, Chile   EIN Employer Identification Number Peru   ID Identification    IDC ClientÂ´s unique identifier, in the case of unique customer / utility consumer ID\u0026rsquo;s.    IFE Federal Electoral Institute Mexico   LC Civic Notebook Argentina   LE Book enlistment Argentina   NIF Tax identification number    NIT Tax identification number Colombia   PP Passport.    RC Birth certificate. Colombia   RDE RDE document type    RE RE document type    RFC Federal taxpayer registry Mexico   RIF Tax Information Registry    RM Commercial Register    RMC Consular Registration    RNC National Taxpayers Registry    RUC Unique Taxpayer Registration Peru   RUN Unique National Role Chile   RUT Unique Tributary Role Chile   SC Safe Passage    SIEM Mexican Business Information System Mexico   SSN Social Security Number    TI Identity Card. Colombia    ","excerpt":"Response codes for transactions    Response code Description     ERROR General error   APPROVED The â€¦","ref":"/docs/getting-started/test-your-solution/responde-codes-and-variables.html","title":"Responde Codes and Variables"},{"body":"The first step to start using PayU services is create an account. This topic shows you the benefits of choosing PayU to receive payments online.\nPayU benefits  Competitive rate Multiple payment methods Sell with or without a website Security  How to create an Account? Regardless of the size of your business, the procedure to create an account is as follows:\n Contact us. If you want to start using PayU services and tools to integrate your shop and start receiving online payments, contact us through our web page.\nOr you can call us:    (+54 11) 5984-2132 (+55 11) 4130-5311 (+56 2) 258-13949 (+57 1) 654-0721 (+52 55) 474-11439 (+50 7) 836-5577 (+51 1) 708-5381 Note If you are in Colombia and sell less than 100 million COP/month, you can create your account using this link  Review our terms and conditions here.   Validation of your account.\nOnce we received your account request, our agents will validate your risk and bank score. Review the Prohibited, Restricted or Forbidden Activities here.\n  Activate your account.\nAfter opening your PayU account, you will receive an email to confirm your email and enter the PayU Module for the first time. At this point, your account is already activated to receive payments on the Internet with all available payment methods. To activate your account, you should:\n   Have completed the documentation and registration in the administrative module. Have a successful transaction.  What\u0026rsquo;s next? After you have created an account, you and your customers receive a notification for each payment they made. The money is then credited to your PayU account.\nAccording to your business needs, select how to integrate your shop with the PayU services and tools. For more information, refer to Integrations.\nFinally, transfer the balance from your PayU account to your bank account whenever you want.\n","excerpt":"The first step to start using PayU services is create an account. This topic shows you the benefits â€¦","ref":"/docs/getting-started/create-an-account.html","title":"Create a PayU Account"},{"body":"","excerpt":"","ref":"/docs/getting-started.html","title":"Getting Started"},{"body":"You can include your company logo in our payment gateway, sending it via HTTP POST method.\nNote The person in charge of integrating your shop with our Payment gateway (WebCheckout) must have strong knowledge in integration with dynamic programming languages such as PHP or Java.  Considerations Take into account the following considerations when using WebCheckout\n Argentina   Brazil   Chile   Colombia   Mexico   Panama   Peru  ","excerpt":"You can include your company logo in our payment gateway, sending it via HTTP POST method.\nNote The â€¦","ref":"/docs/integrations/webcheckout-integration.html","title":"WebCheckout integration"},{"body":"Regardless of the integration type you choose, PayU provides operations to process your transactions. The following section explains these methods.\nTransaction processing PayU provides different operations to process your payments:\n Authorization: this operation is used to verify if the credit card used to pay is active, has funds, etc. The transaction is not complete until a transaction capture is sent.  For Example, when you use a transportation app, after you request the service, the app sends an Authorization to reserve the amount of the trip and verify that your card is valid (active and with enough founds). Nevertheless, the charge is not performed in your card yet. Capture: this operation terminates a previously authorized transaction, namely, at this point, the account makes a debit to the card. Back in the transportation app example, once your service has finished, the apps charges the total amount of your trip and terminates the transaction. Authorization and capture: this operation sends the amount of the transactions to validate (Authorization) and if it is approved, the amount is debited from the card immediately (capture). This is the most common method to process transactions.  Payment methods The available payment methods used to process transactions are:\n Credit cards. Cash or bank payments. Bank transfers.  Note Refer to this article to know the Payment methods available to shoppers per country.  What\u0026rsquo;s next? The integration with this feature depends on the country of your transactions, the operation selected and the payment method.\n For API integrations, refer to this topic For SDK integrations, refer to this topic  ","excerpt":"Regardless of the integration type you choose, PayU provides operations to process your â€¦","ref":"/docs/services/payments.html","title":"Payments"},{"body":"Prerequisites  You need an active account in PayU Latam. Having installed Magento version 1.7.x to 1.9.x. Having the PayU\u0026rsquo;s osCommerce plugin downloaded and stored in an accessible location. Click here to download it. You need access to the folders where Magento is installed. You need access to the Magento Admin Panel.  Considerations  Approved payments appear with Processing status in the orders report. Once the payment is received correctly, Magento creates an invoice with the associated order.  Installation Follow the next procedure to install the plugin on your website.\n Log in to your Magento admin panel. Then, expand the System menu at the top and click Cache Management.\nIn the new window, click Flush Magento Cache.  Unzip the plugin. The plugin folder is called app and it has the following structure:  Navigate to [PluginFolder]\\app\\code\\local and copy the Gfgrisales folder into the \\app\\code\\local folder in the root of the Magento installation folder.\nIf this structure does not exist in your installation, create it with read and write permissions.  Navigate to [PluginFolder]\\app\\design\\frontend\\base\\default\\template and copy the payu folder into the \\app\\design\\frontend\\base\\default\\template folder in the root of the Magento installation folder.  Navigate to [PluginFolder]\\app\\etc\\modules and copy the Gfgrisales_Payu.xml file into the \\app\\etc\\modules folder in the root of the Magento installation folder.  Configuration  Back in your Magento admin panel, expand the System menu and click Configuration. Then, expand Advanced section in the menu displayed on the left panel and click Advanced option.\nClick Disable Modules Output and check that the PayU extension called Gfgrisales_Payu is enabled.  In the Configuration menu on the left panel, expand Sales section in the menu displayed on the left panel and click Payment methods option.\nFind and expand the PayU method and provide the information of your PayU Account.   Merchant ID: ID of your commerce in PayU Latam. APIKey: Unique key of your commerce, you can get this information in your PayU Module (Settings \u0026gt; Technical configuration \u0026gt; API Key). Account ID: ID of the PayU account according to the country where you want to sell. Gateway URL: Gateway URL.  For test, use https://sandbox.gateway.payulatam.com/ppp-web-gateway For production, use https://gateway.payulatam.com/ppp-web-gateway/    Note For testing purposes, you can use the Merchant ID, APIKey, and Account ID available in Test Your Solution.\nOnce you are in the credit card payment form, and ensuring that you have the message at the top of the gateway Transaction in test mode, you must:\n Enter the text APPROVED in the Full Name field if you want the transaction to be approved, REJECTED if you want it to be rejected or PENDING if you want it to be pending. You must enter a valid card number in the Card Number field according to the selected franchise. For this, you can use an online credit card generator. All other fields can be random.   Once finish, click Save Config to apply changes.\nAt this point, your customers can pay with PayU Latam when they do the checkout in the Magento\u0026rsquo;s shopping cart.\n","excerpt":"Prerequisites  You need an active account in PayU Latam. Having installed Magento version 1.7.x to â€¦","ref":"/docs/tools/shopping-cart-plugins/magento.html","title":"Magento"},{"body":"To integrate with Payments API Argentina, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit or debit card Submit transaction with cash Available payment methods query Ping  Note To confirm the status of a transaction, you can use one of the following options:\n Navigate to the the URL set in the transaction.notifyUrl variable or the Confirmation URL option located in the PayU Module in Settings \u0026gt; Technical configuration. Use the Queries API or SDK.   Submit transaction with credit or debit card This method lets you process the payments performed by your customers using credit or debit cards. For Argentina, you can perform the transactions Authorization, Capture, and Authorization and Capture.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set SUBMIT_TRANSACTION.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key   transaction   This object has the transaction data.   transaction \u0026gt; order   This object has the order data.   transaction \u0026gt; order \u0026gt; accountId Number  Identifier of your account.   transaction \u0026gt; order \u0026gt; referenceCode Alphanumeric Min: 1 Max: 255 Represents the identifier of the order in your system.   transaction \u0026gt; order \u0026gt; description Alphanumeric Min: 1 Max: 255 Description of the order.   transaction \u0026gt; order \u0026gt; language Alphanumeric 2 Language used in emails sent to the buyer and the seller.   transaction \u0026gt; order \u0026gt; notifyUrl Alphanumeric Max: 2048 Confirmation URL of the order.   transaction \u0026gt; order \u0026gt; partnerId Alphanumeric Max: 255 Partner ID in PayU.   transaction \u0026gt; order \u0026gt; signature Alphanumeric Max: 255 The signature associated to the form. For more information refer Authentication signature.   transaction \u0026gt; order \u0026gt; shippingAddress   Shipping address.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 100 Address Line 1.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street2 Alphanumeric Max: 100 Address Line 2.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Address city.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Address State.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Address country.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; postalCode Alphanumeric Max: 8 Address Zip code.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; phone Alphanumeric Max: 11 Phone number associated to the address.   transaction \u0026gt; order \u0026gt; buyer   Buyer information.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; merchantBuyerId Alphanumeric Max: 100 Buyer ID in your system.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; fullName Alphanumeric Max: 150 Full name of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; emailAddress Alphanumeric Max: 255 E-mail of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; contactPhone Alphanumeric Max: 20 Phone number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress Alphanumeric  Shipping address of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 150 Buyer\u0026rsquo;s shipping address Line 1.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Buyer\u0026rsquo;s shipping address city.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Buyer\u0026rsquo;s shipping address state.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Buyer\u0026rsquo;s shipping address country in format ISO 3166 alpha-2.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; postalCode Number Max: 20 Buyer\u0026rsquo;s shipping address zip code.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; phone Number Max: 20 Buyer\u0026rsquo;s shipping address phone number.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt;  64 Amount of the order or its associated values.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE Alphanumeric 64 Amount of the transaction.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; value Number 19, 2 Specifies the amount of the transaction, this value may have two decimal digits (Ex. 10000.00 or 10000).   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; currency Alphanumeric 3 ISO code of the currency. See accepted currencies.   transaction \u0026gt; creditCardTokenId   Include this parameter when the transaction is done using a tokenized card replacing the information of the credit card. For more information, refer to Tokenization API   transaction \u0026gt; creditCard   Credit card information. If you process using debit card, do not send this parameter   transaction \u0026gt; creditCard \u0026gt; number Alphanumeric Min: 13 Max: 20 Credit card number.   transaction \u0026gt; creditCard \u0026gt; securityCode Alphanumeric Min: 1 Max: 4 Credit card security code (CVC2, CVV2, CID).   transaction \u0026gt; creditCard \u0026gt; expirationDate Alphanumeric 7 Credit card expiration date. Format YYYY/MM.   transaction \u0026gt; creditCard \u0026gt; name Alphanumeric Min: 1 Max: 255 Holder\u0026rsquo;s name displayed in the credit card.   transaction \u0026gt; creditCard \u0026gt; processWithoutCvv2 Boolean Max: 255 Allows you to process transactions without including the credit card security code. Your commerce requires PayU\u0026rsquo;s authorization before using this feature.   transaction \u0026gt; debitCard   Debit card information. If you process using credit card, do not send this parameter   transaction \u0026gt; debitCard \u0026gt; number Alphanumeric Min: 13 Max: 20 Debit card number.   transaction \u0026gt; debitCard \u0026gt; securityCode Alphanumeric Min: 1 Max: 4 Debit card security code (CVC2, CVV2, CID).   transaction \u0026gt; debitCard \u0026gt; expirationDate Alphanumeric 7 Debit card expiration date. Format YYYY/MM.   transaction \u0026gt; debitCard \u0026gt; name Alphanumeric Min: 1 Max: 255 Holder\u0026rsquo;s name displayed in the debit card.   transaction \u0026gt; payer   Payer information.   transaction \u0026gt; payer \u0026gt; emailAddress Alphanumeric Max: 255 Payer e-mail address.   transaction \u0026gt; payer \u0026gt; merchantPayerId Alphanumeric Max: 100 Identifier of the payer in your system.   transaction \u0026gt; payer \u0026gt; fullName Alphanumeric Max: 150 Name of the payer which must meet the name sent in the parameter \u0026gt; creditCard \u0026gt; name for credit card payments.   transaction \u0026gt; payer \u0026gt; billingAddress   Billing address.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street1 Alphanumeric Max: 100 Billing Address Line 1.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street2 Alphanumeric Max: 100 Billing Address Line 2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; city Alphanumeric Max: 50 Billing address city.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; state Alphanumeric Max: 40 Billing address state.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; country Alphanumeric 2 Billing address country in format ISO 3166 Alpha-2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; postalCode Alphanumeric Max: 20 Billing address zip code.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; phone Alphanumeric Max: 20 Billing address phone number.   transaction \u0026gt; payer \u0026gt; birthdate Alphanumeric Max: 10 Buyer\u0026rsquo;s date of birth.   transaction \u0026gt; payer \u0026gt; contactPhone Alphanumeric Max: 20 Buyer\u0026rsquo;s phone number.   transaction \u0026gt; payer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; payer \u0026gt; dniType Alphanumeric 2 Identification type of the buyer. See Document types.   transaction \u0026gt; type Alphanumeric 32 Set this value according to the transaction you want: AUTHORIZATION, CAPTURE, or AUTHORIZATION_AND_CAPTURE   transaction \u0026gt; paymentMethod Alphanumeric 32 Select a valid Credit or Debit card Payment Method. See the available Payment Methods for Argentina.   transaction \u0026gt; paymentCountry Alphanumeric 2 Set AR for Argentina.   transaction \u0026gt; deviceSessionId Alphanumeric Max: 255 Session identifier of the device where the customer performs the transaction. For mor information, refer to this topic.   transaction \u0026gt; ipAddress Alphanumeric Max: 39 IP address of the device where the customer performs the transaction.   transaction \u0026gt; cookie Alphanumeric Max: 255 Cookie stored by the device where the customer performs the transaction.   transaction \u0026gt; userAgent Alphanumeric Max: 1024 The User agent of the browser where the customer performs the transaction.   transaction \u0026gt; extraParameters   Additional parameters or data associated with the request. The maximum size of each extraParameters name is 64 characters.\nIn JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;INSTALLMENTS_NUMBER\u0026quot;: 1\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   transactionResponse   The response data.   transactionResponse \u0026gt; orderId Number  The generated or existing order Id in PayU.   transactionResponse \u0026gt; transactionId Alphanumeric 36 The identifier of the transaction in PayU.   transactionResponse \u0026gt; state Alphanumeric Max: 32 The status of the transaction.   transactionResponse \u0026gt; responseCode Alphanumeric Max: 64 The response code associated with the status.   transactionResponse \u0026gt; paymentNetworkResponseCode Alphanumeric Max: 255 The response code returned by the financial network.   transactionResponse \u0026gt; paymentNetworkResponseErrorMessage Alphanumeric Max: 255 The error message returned by the financial network.   transactionResponse \u0026gt; trazabilityCode Alphanumeric Max: 32 The traceability code returned by the financial network.   transactionResponse \u0026gt; authorizationCode Alphanumeric Max: 12 The authorization code returned by the financial network.   transactionResponse \u0026gt; responseMessage Alphanumeric Max: 2048 Message associated with the response code.   transactionResponse \u0026gt; operationDate Date  Creation date of the response in the PayUÂ´s system.   transactionResponse \u0026gt; extraParameters   Additional parameters or data associated with the response. In JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;BANK_REFERENCED_CODE\u0026quot;: \u0026quot;CREDIT\u0026quot;\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;     Considerations  For payments with Promotions, send the parameters INSTALLMENTS_NUMBER and PROMOTION_ID with the number of installments selected and the Id of the promotion. Refer to Promotions API for more information. Promotions feature is only available for Authorization and Capture transactions in one step. For payments with credit card tokens, include the parameter transaction.creditCardTokenId replacing the information of the credit card. For more information, refer to Tokenization API. By default, processing credit cards without security code is not enabled. If you want to enable this feature, contact your Sales representative. After this feature is enabled for you, send in the request the variable creditCard.processWithoutCvv2 as true and remove the variable creditCard.securityCode. When using credit cards, take into account the considerations due to Argentinian regulations for the check out page.  Authorization Use this method to perform the authorization of a transaction. The following are the request and response bodys for this transaction type.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512322\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-10T20:25:15.868Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;1ffceb14a71948fdeaba5aef81b8e511\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;ARS\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;123456789\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;0000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;125544\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;creditCard\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;4097440000000004\u0026#34;, \u0026#34;securityCode\u0026#34;: \u0026#34;777\u0026#34;, \u0026#34;expirationDate\u0026#34;: \u0026#34;2022/12\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;APPROVED\u0026#34; }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;INSTALLMENTS_NUMBER\u0026#34;: 1 }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;VISA\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;deviceSessionId\u0026#34;: \u0026#34;vghs6tvkcle931686k1900o6e1\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;pt1t38347bs6jc9ruv2ecpv7o2\u0026#34;, \u0026#34;userAgent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 1400421560, \u0026#34;transactionId\u0026#34;: \u0026#34;db9d9d7f-b62c-4ed2-a3b9-d146d33bdaf5\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;db9d9d7f-b62c-4ed2-a3b9-d146d33bdaf5\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;NPS-011111\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: \u0026#34;APROBADA - Autorizada\u0026#34;, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1623338717949, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;BANK_REFERENCED_CODE\u0026#34;: \u0026#34;CREDIT\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;accountId\u0026gt;512322\u0026lt;/accountId\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-06-10T20:48:38.620Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;signature\u0026gt;52b975674c6b1435c81dde6b8e039730\u0026lt;/signature\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payu.com/notify\u0026lt;/notifyUrl\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;100\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;ARS\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;123456789\u0026lt;/dniNumber\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;0000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;creditCard\u0026gt; \u0026lt;number\u0026gt;4097440000000004\u0026lt;/number\u0026gt; \u0026lt;securityCode\u0026gt;777\u0026lt;/securityCode\u0026gt; \u0026lt;expirationDate\u0026gt;2022/12\u0026lt;/expirationDate\u0026gt; \u0026lt;name\u0026gt;APPROVED\u0026lt;/name\u0026gt; \u0026lt;/creditCard\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;VISA\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;AR\u0026lt;/paymentCountry\u0026gt; \u0026lt;deviceSessionId\u0026gt;vghs6tvkcle931686k1900o6e1\u0026lt;/deviceSessionId\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;cookie\u0026gt;pt1t38347bs6jc9ruv2ecpv7o2\u0026lt;/cookie\u0026gt; \u0026lt;userAgent\u0026gt;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026lt;/userAgent\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400421621\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;dd76e186-e4f1-487c-826b-df4e9b125bfa\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;paymentNetworkResponseCode\u0026gt;0\u0026lt;/paymentNetworkResponseCode\u0026gt; \u0026lt;trazabilityCode\u0026gt;dd76e186-e4f1-487c-826b-df4e9b125bfa\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;NPS-011111\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;responseMessage\u0026gt;APROBADA - Autorizada\u0026lt;/responseMessage\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-10T10:48:40\u0026lt;/operationDate\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Capture Use this method to perform the capture of a transaction. The following are the request and response bodies for this transaction type.\nOnly the parameters displayed in the request body are mandatory to invoke a Capture transaction. Recall that the order and transaction ids must meet with a currently authorized transaction.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;id\u0026#34;: \u0026#34;1400421560\u0026#34; }, \u0026#34;type\u0026#34;: \u0026#34;CAPTURE\u0026#34;, \u0026#34;parentTransactionId\u0026#34;: \u0026#34;db9d9d7f-b62c-4ed2-a3b9-d146d33bdaf5\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 1400421560, \u0026#34;transactionId\u0026#34;: \u0026#34;84ace270-d52d-4e85-b4cf-bbe8710db0d5\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;84ace270-d52d-4e85-b4cf-bbe8710db0d5\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;NPS-011111\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: \u0026#34;APROBADA - Autorizada\u0026#34;, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1623339599368, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: null, \u0026#34;additionalInfo\u0026#34;: null } }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;id\u0026gt;1400421560\u0026lt;/id\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;type\u0026gt;CAPTURE\u0026lt;/type\u0026gt; \u0026lt;parentTransactionId\u0026gt;db9d9d7f-b62c-4ed2-a3b9-d146d33bdaf5\u0026lt;/parentTransactionId\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400421560\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;4522f4ac-4ff2-4e91-aa6c-7f2c2bf18d9d\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;DECLINED\u0026lt;/state\u0026gt; \u0026lt;paymentNetworkResponseErrorMessage\u0026gt;El saldo disponible no es suficiente para procesar la transacciÃ³n.\u0026lt;/paymentNetworkResponseErrorMessage\u0026gt; \u0026lt;responseCode\u0026gt;INVALID_TRANSACTION\u0026lt;/responseCode\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-10T10:55:46\u0026lt;/operationDate\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Authorization and Capture Use this method to perform the authorization and capture in one step of a transaction. The following are the request and response bodies for this transaction type.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512322\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-10T22:29:35.451Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;70f33e263fbcdf18103101dfc86671ab\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;ARS\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;123456789\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;0000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;creditCard\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;4850110000000000\u0026#34;, \u0026#34;securityCode\u0026#34;: \u0026#34;777\u0026#34;, \u0026#34;expirationDate\u0026#34;: \u0026#34;2022/12\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;APPROVED\u0026#34; }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;INSTALLMENTS_NUMBER\u0026#34;: 1 }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;VISA\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;deviceSessionId\u0026#34;: \u0026#34;vghs6tvkcle931686k1900o6e1\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;pt1t38347bs6jc9ruv2ecpv7o2\u0026#34;, \u0026#34;userAgent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 1400421870, \u0026#34;transactionId\u0026#34;: \u0026#34;fc7e5dce-0b69-4865-b7c3-acb0170c1729\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;fc7e5dce-0b69-4865-b7c3-acb0170c1729\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;NPS-011111\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: \u0026#34;APROBADA - Autorizada\u0026#34;, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1623346177300, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;BANK_REFERENCED_CODE\u0026#34;: \u0026#34;CREDIT\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null } }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;accountId\u0026gt;512322\u0026lt;/accountId\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-06-10T20:48:38.620Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;signature\u0026gt;52b975674c6b1435c81dde6b8e039730\u0026lt;/signature\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payu.com/notify\u0026lt;/notifyUrl\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;100\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;ARS\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;123456789\u0026lt;/dniNumber\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;0000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;creditCard\u0026gt; \u0026lt;number\u0026gt;4850110000000000\u0026lt;/number\u0026gt; \u0026lt;securityCode\u0026gt;777\u0026lt;/securityCode\u0026gt; \u0026lt;expirationDate\u0026gt;2022/12\u0026lt;/expirationDate\u0026gt; \u0026lt;name\u0026gt;APPROVED\u0026lt;/name\u0026gt; \u0026lt;/creditCard\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;VISA\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;AR\u0026lt;/paymentCountry\u0026gt; \u0026lt;deviceSessionId\u0026gt;vghs6tvkcle931686k1900o6e1\u0026lt;/deviceSessionId\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;cookie\u0026gt;pt1t38347bs6jc9ruv2ecpv7o2\u0026lt;/cookie\u0026gt; \u0026lt;userAgent\u0026gt;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026lt;/userAgent\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400421894\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;fc588a85-3122-4e4e-b958-a03d48b7438f\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;paymentNetworkResponseCode\u0026gt;0\u0026lt;/paymentNetworkResponseCode\u0026gt; \u0026lt;trazabilityCode\u0026gt;fc588a85-3122-4e4e-b958-a03d48b7438f\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;NPS-011111\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;responseMessage\u0026gt;APROBADA - Autorizada\u0026lt;/responseMessage\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-10T12:41:15\u0026lt;/operationDate\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Installments When processing transactions with credit cards, you need to show the following aspects to your customer when processing installments:\nWhere:\n   Number in the screen Option Description     1 Total purchase Total amount of the purchase without financing.   2 Total payment Total amount financed of the purchase.   3 Installments Number of installments and their amount.   4 TEA The annual effective interest rate (TEA) applied.   5 CFT The total financial cost (CFT).    The information of the total financial cost (CFT) must comply with the following directions:\n  Must be located next to the reported variables.\n  Must appear in a prominent color typeface using the same font and size of at least five times bigger than the one used to inform the annual effective interest rate (TEA), the number of installments, and their amount.\n  According to the current regulations, you cannot use the phrase without interest (in Spanish, \u0026ldquo;sin interÃ©s\u0026rdquo;) or any other similar phrase, when the financial cost of the product or service is transferred to the customer\u0026rsquo;s selling price.\nSubmit transaction with cash This method lets you process the payments in cash of your customers. To integrate with cash transactions, you must redirect the customer to the URL found in the response of the method; your customer sees a payment receipt like this.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set SUBMIT_TRANSACTION.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key   transaction   This object has the transaction data.   transaction \u0026gt; order   This object has the order data.   transaction \u0026gt; order \u0026gt; accountId Number  Identifier of your account.   transaction \u0026gt; order \u0026gt; referenceCode Alphanumeric Min: 1 Max: 255 Represents the identifier of the order in your system.   transaction \u0026gt; order \u0026gt; description Alphanumeric Min: 1 Max: 255 Description of the order.   transaction \u0026gt; order \u0026gt; language Alphanumeric 2 Language used in emails sent to the buyer and the seller.   transaction \u0026gt; order \u0026gt; notifyUrl Alphanumeric Max: 2048 Confirmation URL of the order.   transaction \u0026gt; order \u0026gt; partnerId Alphanumeric Max: 255 Partner ID in PayU.   transaction \u0026gt; order \u0026gt; signature Alphanumeric Max: 255 The signature associated to the form. For more information refer Authentication signature.   transaction \u0026gt; order \u0026gt; shippingAddress   Shipping address.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 100 Address Line 1.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street2 Alphanumeric Max: 100 Address Line 2.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Address city.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Address State.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Address country.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; postalCode Alphanumeric Max: 8 Address Zip code.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; phone Alphanumeric Max: 11 Phone number associated to the address.   transaction \u0026gt; order \u0026gt; buyer   Buyer information.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; merchantBuyerId Alphanumeric Max: 100 Buyer ID in your system.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; fullName Alphanumeric Max: 150 Full name of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; emailAddress Alphanumeric Max: 255 E-mail of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; contactPhone Alphanumeric Max: 20 Phone number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress Alphanumeric  Shipping address of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 150 Buyer\u0026rsquo;s shipping address Line 1.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Buyer\u0026rsquo;s shipping address city.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Buyer\u0026rsquo;s shipping address state.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Buyer\u0026rsquo;s shipping address country in format ISO 3166 alpha-2.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; postalCode Number Max: 20 Buyer\u0026rsquo;s shipping address zip code.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; phone Number Max: 20 Buyer\u0026rsquo;s shipping address phone number.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt;  64 Amount of the order or its associated values.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE Alphanumeric 64 Amount of the transaction.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; value Number 19, 2 Specifies the amount of the transaction, this value may have two decimal digits (Ex. 10000.00 or 10000).   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; currency Alphanumeric 3 ISO code of the currency. See accepted currencies.   transaction \u0026gt; payer   Payer information.   transaction \u0026gt; payer \u0026gt; emailAddress Alphanumeric Max: 255 Payer e-mail address.   transaction \u0026gt; payer \u0026gt; merchantPayerId Alphanumeric Max: 100 Identifier of the payer in your system.   transaction \u0026gt; payer \u0026gt; fullName Alphanumeric Max: 150 Name of the payer which must meet the name sent in the parameter \u0026gt; creditCard \u0026gt; name for credit card payments.   transaction \u0026gt; payer \u0026gt; billingAddress   Billing address.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street1 Alphanumeric Max: 100 Billing Address Line 1.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street2 Alphanumeric Max: 100 Billing Address Line 2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; city Alphanumeric Max: 50 Billing address city.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; state Alphanumeric Max: 40 Billing address state.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; country Alphanumeric 2 Billing address country in format ISO 3166 Alpha-2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; postalCode Alphanumeric Max: 20 Billing address zip code.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; phone Alphanumeric Max: 20 Billing address phone number.   transaction \u0026gt; payer \u0026gt; birthdate Alphanumeric Max: 10 Buyer\u0026rsquo;s date of birth.   transaction \u0026gt; payer \u0026gt; contactPhone Alphanumeric Max: 20 Buyer\u0026rsquo;s phone number.   transaction \u0026gt; payer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; payer \u0026gt; dniType Alphanumeric 2 Identification type of the buyer. See Document types.   transaction \u0026gt; type Alphanumeric 32 As cash payments are performed in physical offices, the only available transaction type is AUTHORIZATION_AND_CAPTURE   transaction \u0026gt; paymentMethod Alphanumeric 32 Select a valid Payment Method in cash. See the available Payment Methods for Argentina.   transaction \u0026gt; paymentCountry Alphanumeric 2 Set AR for Argentina.   transaction \u0026gt; expirationDate Alphanumeric 23 Maximum date and time that the payer has to make the payment. Format YYYY-MM-DDTHH:MM:SS, for example 2021-06-12T16:07:11.586.   transaction \u0026gt; ipAddress Alphanumeric Max: 39 IP address of the device where the customer performs the transaction.      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   transactionResponse   The response data.   transactionResponse \u0026gt; orderId Number  The generated or existing order Id in PayU.   transactionResponse \u0026gt; transactionId Alphanumeric 36 The identifier of the transaction in PayU.   transactionResponse \u0026gt; state Alphanumeric Max: 32 The status of the transaction. As the payment is performed by the user in a physical office, the state for a successful transaction is PENDING   transactionResponse \u0026gt; paymentNetworkResponseCode Alphanumeric Max: 255 The response code returned by the financial network.   transactionResponse \u0026gt; paymentNetworkResponseErrorMessage Alphanumeric Max: 255 The error message returned by the financial network.   transactionResponse \u0026gt; trazabilityCode Alphanumeric Max: 32 The traceability code returned by the financial network.   transactionResponse \u0026gt; authorizationCode Alphanumeric Max: 12 The authorization code returned by the financial network.   transactionResponse \u0026gt; pendingReason Alphanumeric Max: 21 The reason code associated with the status, as mentioned in transactionResponse \u0026gt; state, the transaction is waiting for the payment.   transactionResponse \u0026gt; responseCode Alphanumeric Max: 64 The response code associated with the status. In this case, for successful transactions is PENDING_TRANSACTION_CONFIRMATION.   transactionResponse \u0026gt; responseMessage Alphanumeric Max: 2048 Message associated with the response code.   transactionResponse \u0026gt; operationDate Date  Creation date of the response in the PayUÂ´s system.   transactionResponse \u0026gt; extraParameters   Additional parameters or data associated with the response.\nIn JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;REFERENCE\u0026quot;: \u0026quot;74794\u0026quot;\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;REFERENCE\u0026lt;/string\u0026gt;\n\u0026lt;int\u0026gt;74794\u0026lt;/int\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;     Considerations  The parameter transaction.expirationDate is not mandatory. If you don\u0026rsquo;t send this parameter, its default value for is 90 days after the current date at 12:00 pm. The parameter transactionResponse.extraParameters has the following parameters related to the transaction:  REFERENCE: internal payment reference generated by PayU. EXPIRATION_DATE: maximum term for the payer to perform the payment. BAR_CODE: barcode which lets the payer perform the payment. URL_PAYMENT_RECEIPT_HTML: payment receipt in HTML format. This is where you need to redirect the payment when the payer selects cash payment. URL_PAYMENT_RECEIPT_PDF: payment receipt in PDF format.    API call The following are the bodies of the request and response of this payment method.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512322\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-10T20:25:15.868Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;1ffceb14a71948fdeaba5aef81b8e511\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;ARS\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;0000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Av Centenario 837\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;125544\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;San Isidro\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Buenos Aires\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;PAGOFACIL\u0026#34;, \u0026#34;expirationDate\u0026#34;: \u0026#34;2021-06-12T16:07:11\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 857787128, \u0026#34;transactionId\u0026#34;: \u0026#34;702ee8a1-d99c-43cc-a097-167db0d7ff1a\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;PENDING\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: null, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: null, \u0026#34;authorizationCode\u0026#34;: null, \u0026#34;pendingReason\u0026#34;: \u0026#34;AWAITING_NOTIFICATION\u0026#34;, \u0026#34;responseCode\u0026#34;: \u0026#34;PENDING_TRANSACTION_CONFIRMATION\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: null, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: null, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;REFERENCE\u0026#34;: 74794, \u0026#34;URL_PAYMENT_RECEIPT_PDF\u0026#34;: \u0026#34;https://sandbox.checkout.payulatam.com/ppp-web-gateway-payu/receipt?vid=857787128Y702ee8a1d99c43cY5769b4d7b64fa1e\u0026#34;, \u0026#34;EXPIRATION_DATE\u0026#34;: 1623514031586, \u0026#34;BAR_CODE\u0026#34;: \u0026#34;99580010000074794000000000000000000001206211107000010000083\u0026#34;, \u0026#34;URL_PAYMENT_RECEIPT_HTML\u0026#34;: \u0026#34;https://sandbox.checkout.payulatam.com/ppp-web-gateway-payu/app?vid=857787128Y702ee8a1d99c43cY5769b4d7b64fa1e\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null } }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;accountId\u0026gt;512322\u0026lt;/accountId\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-06-15T14:40:25.549Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;signature\u0026gt;1ffceb14a71948fdeaba5aef81b8e511\u0026lt;/signature\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payu.com/notify\u0026lt;/notifyUrl\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;1000\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;ARS\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;Av Centenario 837\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;San Isidro\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Buenos Aires\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;PAGOFACIL\u0026lt;/paymentMethod\u0026gt; \u0026lt;expirationDate\u0026gt;2021-06-16T16:07:11\u0026lt;/expirationDate\u0026gt; \u0026lt;paymentCountry\u0026gt;AR\u0026lt;/paymentCountry\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;857792249\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;96a2e817-e26a-456b-85d4-28df8c3a584e\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;PENDING\u0026lt;/state\u0026gt; \u0026lt;pendingReason\u0026gt;AWAITING_NOTIFICATION\u0026lt;/pendingReason\u0026gt; \u0026lt;responseCode\u0026gt;PENDING_TRANSACTION_CONFIRMATION\u0026lt;/responseCode\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;REFERENCE\u0026lt;/string\u0026gt; \u0026lt;int\u0026gt;75017\u0026lt;/int\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;URL_PAYMENT_RECEIPT_PDF\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;https://sandbox.checkout.payulatam.com/ppp-web-gateway-payu/receipt?vid=857792249Y96a2e817e26a456Y47e0b9cb12503f6\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;EXPIRATION_DATE\u0026lt;/string\u0026gt; \u0026lt;date\u0026gt;2021-06-16T11:07:11\u0026lt;/date\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;BAR_CODE\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;99580010000075017000000000000000000001606211107000010000082\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;URL_PAYMENT_RECEIPT_HTML\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;https://sandbox.checkout.payulatam.com/ppp-web-gateway-payu/app?vid=857792249Y96a2e817e26a456Y47e0b9cb12503f6\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Available payment methods query This method returns a list of the payment methods available in all countries.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set GET_PAYMENT_METHODS.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   paymentMethods   List of the payment methods.   paymentMethods \u0026gt; paymentMethodComplete   This object has the information of a payment method.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; id Numeric  Payment method identifier.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; description Alphanumeric Max: 32 Payment method name.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; country Alphanumeric 2 ISO code of the Payment method country.     API call The following are the bodies of the request and response of this method. For the sake of the example, the request and response here show two payment methods.\n JSON XML   Request body:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;GET_PAYMENT_METHODS\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;paymentMethods\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;201\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;ARGENCARD\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;enabled\u0026#34;: true, \u0026#34;reason\u0026#34;: null }, { \u0026#34;id\u0026#34;: \u0026#34;212\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;MASTERCARD\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;AR\u0026#34;, \u0026#34;enabled\u0026#34;: true, \u0026#34;reason\u0026#34;: null } ] }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;GET_PAYMENT_METHODS\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentMethodsResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;paymentMethods\u0026gt; \u0026lt;paymentMethodComplete\u0026gt; \u0026lt;id\u0026gt;201\u0026lt;/id\u0026gt; \u0026lt;description\u0026gt;ARGENCARD\u0026lt;/description\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/paymentMethodComplete\u0026gt; \u0026lt;paymentMethodComplete\u0026gt; \u0026lt;id\u0026gt;212\u0026lt;/id\u0026gt; \u0026lt;description\u0026gt;MASTERCARD\u0026lt;/description\u0026gt; \u0026lt;country\u0026gt;AR\u0026lt;/country\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/paymentMethodComplete\u0026gt; \u0026lt;/paymentMethods\u0026gt; \u0026lt;/paymentMethodsResponse\u0026gt;    Ping The PING method lets you verify the connection to our platform.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set PING.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction.   error Alphanumeric Max: 2048 The error message associated if an error ocurred.   transactionResponse transactionResponse Max: 2048 The response of the PING method if an error ocurred.     Api call The following are the bodies of the request and response of this method.\n JSON XML   Request body:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;PING\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: null }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;PING\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;/paymentResponse\u0026gt;    ","excerpt":"To integrate with Payments API Argentina, target your request to the following URLs according to â€¦","ref":"/docs/integrations/api-integration/payments-api-argentina.html","title":"Payments API - Argentina"},{"body":"To integrate with Payments API Brazil, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit card Submit transaction with cash Available payment methods query Ping  Submit transaction with credit cards This method lets you process the payments performed by your customers using credit cards. For Brazil, you can perform the transactions Authorization, Capture, and Authorization and Capture.\nVariables for request and response Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set SUBMIT_TRANSACTION.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key   transaction   This object has the transaction data.   transaction \u0026gt; order   This object has the order data.   transaction \u0026gt; order \u0026gt; accountId Number  Identifier of your account.   transaction \u0026gt; order \u0026gt; referenceCode Alphanumeric Min: 1 Max: 255 Represents the identifier of the order in your system.   transaction \u0026gt; order \u0026gt; description Alphanumeric Min: 1 Max: 255 Description of the order.   transaction \u0026gt; order \u0026gt; language Alphanumeric 2 Language used in emails sent to the buyer and the seller.   transaction \u0026gt; order \u0026gt; notifyUrl Alphanumeric Max: 2048 Confirmation URL of the order.   transaction \u0026gt; order \u0026gt; partnerId Alphanumeric Max: 255 Partner ID in PayU.   transaction \u0026gt; order \u0026gt; signature Alphanumeric Max: 255 The signature associated to the form. For more information refer Authentication signature.   transaction \u0026gt; order \u0026gt; shippingAddress   Shipping address.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 100 Address Line 1.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street2 Alphanumeric Max: 100 Address Line 2.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Address city.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Address State. For Brazil, only send two characters, For example, set SP for SÃ£o Paulo.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Address country.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; postalCode Alphanumeric Max: 8 Address Zip code. For Brazil, use the format XXXXX-XXX or XXXXXXXX. Example: 09210-710 or 09210710.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; phone Alphanumeric Max: 11 Phone number associated to the address. For Brazil, use the format ddd(2)+number(7-9). Example: (11)756312633.   transaction \u0026gt; order \u0026gt; buyer   Buyer information.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; merchantBuyerId Alphanumeric Max: 100 Buyer ID in your system.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; fullName Alphanumeric Max: 150 Full name of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; emailAddress Alphanumeric Max: 255 E-mail of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; contactPhone Alphanumeric Max: 20 Phone number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer. You must use an algorithm to validate the CPF and must be set using the format XXX.XXX.XXX-XX. Example: 811.807.405-64   transaction \u0026gt; order \u0026gt; buyer \u0026gt; cnpj Alphanumeric Max: 14 Identification number of the buyer (For Legal person in Brazil). You must use an algorithm to validate the CNPJ and must be set using the format XXXXXXXXXXXXXX. Example: 32593371000110.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress Alphanumeric  Shipping address of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 150 Buyer\u0026rsquo;s shipping address Line 1.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Buyer\u0026rsquo;s shipping address city.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Buyer\u0026rsquo;s shipping address state. For Brazil, only send two characters, For example, set SP for SÃ£o Paulo.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Buyer\u0026rsquo;s shipping address country in format ISO 3166 alpha-2.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; postalCode Number Max: 20 Buyer\u0026rsquo;s shipping address zip code. For Brazil, use the format XXXXX-XXX or XXXXXXXX. Example: 09210-710 or 09210710.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; phone Number Max: 20 Buyer\u0026rsquo;s shipping address phone number. For Brazil, use the format ddd(2)+number(7-9). Example: (11)756312633.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt;  64 Amount of the order or its associated values.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE Alphanumeric 64 Amount of the transaction.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; value Number 19, 2 Specifies the amount of the transaction, this value may have two decimal digits (Ex. 10000.00 or 10000).   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; currency Alphanumeric 3 ISO code of the currency. See accepted currencies.   transaction \u0026gt; creditCardTokenId   Include this parameter when the transaction is done using a tokenized card replacing the information of the credit card. For more information, refer to Tokenization API   transaction \u0026gt; creditCard   Credit card information. If you process using debit card, do not send this parameter   transaction \u0026gt; creditCard \u0026gt; number Alphanumeric Min: 13 Max: 20 Credit card number.   transaction \u0026gt; creditCard \u0026gt; securityCode Alphanumeric Min: 1 Max: 4 Credit card security code (CVC2, CVV2, CID).   transaction \u0026gt; creditCard \u0026gt; expirationDate Alphanumeric 7 Credit card expiration date. Format YYYY/MM.   transaction \u0026gt; creditCard \u0026gt; name Alphanumeric Min: 1 Max: 255 Holder\u0026rsquo;s name displayed in the credit card.   transaction \u0026gt; creditCard \u0026gt; processWithoutCvv2 Boolean Max: 255 Allows you to process transactions without including the credit card security code. Your commerce requires PayU\u0026rsquo;s authorization before using this feature.   transaction \u0026gt; payer   Payer information. This information is optional.   transaction \u0026gt; payer \u0026gt; emailAddress Alphanumeric Max: 255 Payer e-mail address.   transaction \u0026gt; payer \u0026gt; merchantPayerId Alphanumeric Max: 100 Identifier of the payer in your system.   transaction \u0026gt; payer \u0026gt; fullName Alphanumeric Max: 150 Name of the payer which must meet the name sent in the parameter \u0026gt; creditCard \u0026gt; name for credit card payments.   transaction \u0026gt; payer \u0026gt; billingAddress   Billing address.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street1 Alphanumeric Max: 100 Billing Address Line 1.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street2 Alphanumeric Max: 100 Billing Address Line 2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; city Alphanumeric Max: 50 Billing address city.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; state Alphanumeric Max: 40 Billing address state. For Brazil, only send two characters, For example, set SP for SÃ£o Paulo.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; country Alphanumeric 2 Billing address country in format ISO 3166 Alpha-2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; postalCode Alphanumeric Max: 20 Billing address zip code. For Brazil, use the format XXXXX-XXX or Â´. Example: 09210-710 or 09210710.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; phone Alphanumeric Max: 20 Billing address phone number. For Brazil, use the format ddd(2)+number(7-9). Example: (11)756312633.   transaction \u0026gt; payer \u0026gt; birthdate Alphanumeric Max: 10 Buyer\u0026rsquo;s date of birth.   transaction \u0026gt; payer \u0026gt; contactPhone Alphanumeric Max: 20 Buyer\u0026rsquo;s phone number.   transaction \u0026gt; payer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; payer \u0026gt; dniType Alphanumeric 2 Identification type of the buyer. See Document types.   transaction \u0026gt; type Alphanumeric 32 Set this value according to the transaction you want: AUTHORIZATION, CAPTURE, or AUTHORIZATION_AND_CAPTURE   transaction \u0026gt; paymentMethod Alphanumeric 32 Select a valid Credit or Debit card Payment Method. See the available Payment Methods for Brazil.   transaction \u0026gt; paymentCountry Alphanumeric 2 Set BR for Brazil.   transaction \u0026gt; deviceSessionId Alphanumeric Max: 255 Session identifier of the device where the customer performs the transaction. For mor information, refer to this topic.   transaction \u0026gt; ipAddress Alphanumeric Max: 39 IP address of the device where the customer performs the transaction.   transaction \u0026gt; cookie Alphanumeric Max: 255 Cookie stored by the device where the customer performs the transaction.   transaction \u0026gt; userAgent Alphanumeric Max: 1024 The User agent of the browser where the customer performs the transaction.   transaction \u0026gt; extraParameters   Additional parameters or data associated with the request. The maximum size of each extraParameters name is 64 characters.\nIn JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;INSTALLMENTS_NUMBER\u0026quot;: 1\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;   transaction \u0026gt; termsAndConditionsAcepted Boolean  PayU terms and conditions that the payers must accept. This parameter is only mandatory if your Brazilian PayU account is associated to a foreign bank account.   transaction \u0026gt; threeDomainSecure   This object contains the information of 3DS 2.0.   transaction \u0026gt; threeDomainSecure \u0026gt; embedded Boolean  Set true if you want to use and embedded MPI for the Authorization process. By default, this value is set as false.   transaction \u0026gt; threeDomainSecure \u0026gt; eci Number Max: 2 Eletronic Commerce Indicator.\nValue returned by the directory servers showing the authentication attempt.\nThis parameter is mandatory when transaction.threeDomainSecure.embedded is false and transaction.threeDomainSecure.xid has been set.   transaction \u0026gt; threeDomainSecure \u0026gt; cavv Alphanumeric Max: 28 Cardholder Authentication Verification Value.\nCode of the cryptogram used in the transaction authentication in Base64.\nDepending on the specific ECI codes established by the process network, this value may be optional.   transaction \u0026gt; threeDomainSecure \u0026gt; xid Alphanumeric Max: 28 Transaction ID sent by the MPI in Base64.\nThis parameter is mandatory when transaction.threeDomainSecure.embedded is false and transaction.threeDomainSecure.eci has been set.   transaction \u0026gt; threeDomainSecure \u0026gt; directoryServerTransactionId Alphanumeric Max: 36 Transaction ID generated by the Directory Server during the Authentication.      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   transactionResponse   The response data.   transactionResponse \u0026gt; orderId Number  The generated or existing order Id in PayU.   transactionResponse \u0026gt; transactionId Alphanumeric 36 The identifier of the transaction in PayU.   transactionResponse \u0026gt; state Alphanumeric Max: 32 The status of the transaction.   transactionResponse \u0026gt; responseCode Alphanumeric Max: 64 The response code associated with the status.   transactionResponse \u0026gt; paymentNetworkResponseCode Alphanumeric Max: 255 The response code returned by the financial network.   transactionResponse \u0026gt; paymentNetworkResponseErrorMessage Alphanumeric Max: 255 The error message returned by the financial network.   transactionResponse \u0026gt; trazabilityCode Alphanumeric Max: 32 The traceability code returned by the financial network.   transactionResponse \u0026gt; authorizationCode Alphanumeric Max: 12 The authorization code returned by the financial network.   transactionResponse \u0026gt; responseMessage Alphanumeric Max: 2048 Message associated with the response code.   transactionResponse \u0026gt; operationDate Date  Creation date of the response in the PayUÂ´s system.   transactionResponse \u0026gt; extraParameters   Additional parameters or data associated with the response. In JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;BANK_REFERENCED_CODE\u0026quot;: \u0026quot;CREDIT\u0026quot;\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;     Considerations  For payments with credit card tokens, include the parameter transaction.creditCardTokenId replacing the information of the credit card. For more information, refer to Tokenization API. By default, processing credit cards without security code is not enabled. If you want to enable this feature, contact your Sales representative. After this feature is enabled for you, send in the request the variable creditCard.processWithoutCvv2 as true and remove the variable creditCard.securityCode. The extra parameter CIELO_TID identifies the transaction, this parameter is needed when you want to process voids.  Authorization Use this method to perform the authorization of a transaction. The following are the request and response bodys for this transaction type.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512327\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-17T19:11:57.179Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;fbc089272288edc52c332395d9566f4c\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 1000, \u0026#34;currency\u0026#34;: \u0026#34;BRL\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;811.807.405-64\u0026#34;, \u0026#34;cnpj\u0026#34;: \u0026#34;32593371000110\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Quadra QNP 34 Conjunto G 780\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Manaos\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;SP\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;10012545\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Quadra QNP 34 Conjunto G 780\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Manaos\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;SP\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;10012545\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;creditCard\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;5253203387684619\u0026#34;, \u0026#34;securityCode\u0026#34;: \u0026#34;777\u0026#34;, \u0026#34;expirationDate\u0026#34;: \u0026#34;2022/12\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;APPROVED\u0026#34; }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;INSTALLMENTS_NUMBER\u0026#34;: 1 }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;MASTERCARD\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;deviceSessionId\u0026#34;: \u0026#34;vghs6tvkcle931686k1900o6e1\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;pt1t38347bs6jc9ruv2ecpv7o2\u0026#34;, \u0026#34;userAgent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026#34;, \u0026#34;threeDomainSecure\u0026#34;: { \u0026#34;embedded\u0026#34;: false, \u0026#34;eci\u0026#34;: \u0026#34;01\u0026#34;, \u0026#34;cavv\u0026#34;: \u0026#34;AOvG5rV058/iAAWhssPUAAADFA==\u0026#34;, \u0026#34;xid\u0026#34;: \u0026#34;Nmp3VFdWMlEwZ05pWGN3SGo4TDA=\u0026#34;, \u0026#34;directoryServerTransactionId\u0026#34;: \u0026#34;00000-70000b-5cc9-0000-000000000cb\u0026#34; } }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 1400434770, \u0026#34;transactionId\u0026#34;: \u0026#34;79de715b-fe77-401e-8b18-241820afb375\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: \u0026#34;00\u0026#34;, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;282856\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;MOCK-CIELO-1623957118463\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: null, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1623939118784, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;BANK_REFERENCED_CODE\u0026#34;: \u0026#34;CREDIT\u0026#34;, \u0026#34;CIELO_TID\u0026#34;: \u0026#34;1006993069000509C28A\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null } }   Request body:\n\nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400434942\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;1af49d5d-464a-4efb-98db-f7875e3c580b\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;paymentNetworkResponseCode\u0026gt;00\u0026lt;/paymentNetworkResponseCode\u0026gt; \u0026lt;trazabilityCode\u0026gt;282856\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;MOCK-CIELO-1623962788239\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-17T10:46:28\u0026lt;/operationDate\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;CIELO_TID\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;1006993069000509C28A\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Capture Use this method to perform the capture of a transaction. The following are the request and response bodies for this transaction type.\nOnly the parameters displayed in the request body are mandatory to invoke a Capture transaction. Recall that the order and transaction ids must meet with a currently authorized transaction.\n JSON XML   Request body:\n\nResponse body:\n  Request body:\n\nResponse body:\n   Authorization and Capture Use this method to perform the authorization and capture in one step of a transaction. The following are the request and response bodies for this transaction type.\n JSON XML   Request body:\n\nResponse body:\n  Request body:\n\nResponse body:\n   Submit transaction with cash Available payment methods query This method returns a list of the payment methods available in all countries.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set GET_PAYMENT_METHODS.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   paymentMethods   List of the payment methods.   paymentMethods \u0026gt; paymentMethodComplete   This object has the information of a payment method.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; id Numeric  Payment method identifier.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; description Alphanumeric Max: 32 Payment method name.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; country Alphanumeric 2 ISO code of the Payment method country.     API call The following are the bodies of the request and response of this method. For the sake of the example, the request and response here show two payment methods.\n JSON XML   Request body:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;GET_PAYMENT_METHODS\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;paymentMethods\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;177\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;VISA\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;enabled\u0026#34;: true, \u0026#34;reason\u0026#34;: null }, { \u0026#34;id\u0026#34;: \u0026#34;172\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;MASTERCARD\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;BR\u0026#34;, \u0026#34;enabled\u0026#34;: true, \u0026#34;reason\u0026#34;: null } ] }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;GET_PAYMENT_METHODS\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentMethodsResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;paymentMethods\u0026gt; \u0026lt;paymentMethodComplete\u0026gt; \u0026lt;id\u0026gt;177\u0026lt;/id\u0026gt; \u0026lt;description\u0026gt;VISA\u0026lt;/description\u0026gt; \u0026lt;country\u0026gt;BR\u0026lt;/country\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/paymentMethodComplete\u0026gt; \u0026lt;paymentMethodComplete\u0026gt; \u0026lt;id\u0026gt;172\u0026lt;/id\u0026gt; \u0026lt;description\u0026gt;MASTERCARD\u0026lt;/description\u0026gt; \u0026lt;country\u0026gt;BR\u0026lt;/country\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/paymentMethodComplete\u0026gt; \u0026lt;/paymentMethods\u0026gt; \u0026lt;/paymentMethodsResponse\u0026gt;    Ping The PING method lets you verify the connection to our platform.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set PING.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction.   error Alphanumeric Max: 2048 The error message associated if an error ocurred.   transactionResponse transactionResponse Max: 2048 The response of the PING method if an error ocurred.     Api call The following are the bodies of the request and response of this method.\n JSON XML   Request body:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;PING\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: null }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;PING\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;/paymentResponse\u0026gt;    ","excerpt":"To integrate with Payments API Brazil, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/payments-api-brazil.html","title":"Payments API - Brazil"},{"body":"To integrate with Payments API Chile, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit card Submit transaction with cash Submit transaction with bank transfer Active payment methods query Ping  Note To confirm the status of a transaction, you can use one of the following options:\n Navigate to the the URL set in the transaction.notifyUrl variable or the Confirmation URL option located in the PayU Module in Settings \u0026gt; Technical configuration. Use the Queries API or SDK.   Submit transaction with credit cards This method lets you process the payments performed by your customers using credit or debit cards. For Chile, you can perform the transaction Authorization and Capture in one step.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set SUBMIT_TRANSACTION.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key   transaction   This object has the transaction data.   transaction \u0026gt; order   This object has the order data.   transaction \u0026gt; order \u0026gt; accountId Number  Identifier of your account.   transaction \u0026gt; order \u0026gt; referenceCode Alphanumeric Min: 1 Max: 255 Represents the identifier of the order in your system.   transaction \u0026gt; order \u0026gt; description Alphanumeric Min: 1 Max: 255 Description of the order.   transaction \u0026gt; order \u0026gt; language Alphanumeric 2 Language used in emails sent to the buyer and the seller.   transaction \u0026gt; order \u0026gt; notifyUrl Alphanumeric Max: 2048 Confirmation URL of the order.   transaction \u0026gt; order \u0026gt; partnerId Alphanumeric Max: 255 Partner ID in PayU.   transaction \u0026gt; order \u0026gt; signature Alphanumeric Max: 255 The signature associated to the form. For more information refer Authentication signature.   transaction \u0026gt; order \u0026gt; shippingAddress   Shipping address.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 100 Address Line 1.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street2 Alphanumeric Max: 100 Address Line 2.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Address city.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Address State.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Address country.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; postalCode Alphanumeric Max: 8 Address Zip code.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; phone Alphanumeric Max: 11 Phone number associated to the address.   transaction \u0026gt; order \u0026gt; buyer   Buyer information.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; merchantBuyerId Alphanumeric Max: 100 Buyer ID in your system.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; fullName Alphanumeric Max: 150 Full name of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; emailAddress Alphanumeric Max: 255 E-mail of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; contactPhone Alphanumeric Max: 20 Phone number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress Alphanumeric  Shipping address of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 150 Buyer\u0026rsquo;s shipping address Line 1.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Buyer\u0026rsquo;s shipping address city.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Buyer\u0026rsquo;s shipping address state.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Buyer\u0026rsquo;s shipping address country in format ISO 3166 alpha-2.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; postalCode Number Max: 20 Buyer\u0026rsquo;s shipping address zip code.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; phone Number Max: 20 Buyer\u0026rsquo;s shipping address phone number.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt;  64 Amount of the order or its associated values.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE Alphanumeric 64 Amount of the transaction.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; value Number 19, 2 Specifies the amount of the transaction. This amount cannot include decimals.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; currency Alphanumeric 3 ISO code of the currency. See accepted currencies.   transaction \u0026gt; creditCardTokenId   Include this parameter when the transaction is done using a tokenized card replacing the information of the credit card. For more information, refer to Tokenization API   transaction \u0026gt; creditCard   Credit card information. If you process using debit card, do not send this parameter   transaction \u0026gt; creditCard \u0026gt; number Alphanumeric Min: 13 Max: 20 Credit card number.   transaction \u0026gt; creditCard \u0026gt; securityCode Alphanumeric Min: 1 Max: 4 Credit card security code (CVC2, CVV2, CID).   transaction \u0026gt; creditCard \u0026gt; expirationDate Alphanumeric 7 Credit card expiration date. Format YYYY/MM.   transaction \u0026gt; creditCard \u0026gt; name Alphanumeric Min: 1 Max: 255 Holder\u0026rsquo;s name displayed in the credit card.   transaction \u0026gt; creditCard \u0026gt; processWithoutCvv2 Boolean Max: 255 Allows you to process transactions without including the credit card security code. Your commerce requires PayU\u0026rsquo;s authorization before using this feature.   transaction \u0026gt; debitCard   Debit card information. If you process using credit card, do not send this parameter   transaction \u0026gt; debitCard \u0026gt; number Alphanumeric Min: 13 Max: 20 Debit card number.   transaction \u0026gt; debitCard \u0026gt; securityCode Alphanumeric Min: 1 Max: 4 Debit card security code (CVC2, CVV2, CID).   transaction \u0026gt; debitCard \u0026gt; expirationDate Alphanumeric 7 Debit card expiration date. Format YYYY/MM.   transaction \u0026gt; debitCard \u0026gt; name Alphanumeric Min: 1 Max: 255 Holder\u0026rsquo;s name displayed in the debit card.   transaction \u0026gt; payer   Payer information.   transaction \u0026gt; payer \u0026gt; emailAddress Alphanumeric Max: 255 Payer e-mail address.   transaction \u0026gt; payer \u0026gt; merchantPayerId Alphanumeric Max: 100 Identifier of the payer in your system.   transaction \u0026gt; payer \u0026gt; fullName Alphanumeric Max: 150 Name of the payer which must meet the name sent in the parameter \u0026gt; creditCard \u0026gt; name for credit card payments.   transaction \u0026gt; payer \u0026gt; billingAddress   Billing address.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street1 Alphanumeric Max: 100 Billing Address Line 1.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street2 Alphanumeric Max: 100 Billing Address Line 2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; city Alphanumeric Max: 50 Billing address city.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; state Alphanumeric Max: 40 Billing address state.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; country Alphanumeric 2 Billing address country in format ISO 3166 Alpha-2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; postalCode Alphanumeric Max: 20 Billing address zip code.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; phone Alphanumeric Max: 20 Billing address phone number.   transaction \u0026gt; payer \u0026gt; birthdate Alphanumeric Max: 10 Buyer\u0026rsquo;s date of birth.   transaction \u0026gt; payer \u0026gt; contactPhone Alphanumeric Max: 20 Buyer\u0026rsquo;s phone number.   transaction \u0026gt; payer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; payer \u0026gt; dniType Alphanumeric 2 Identification type of the buyer. See Document types.   transaction \u0026gt; type Alphanumeric 32 Set this value according to the transaction you want: AUTHORIZATION, CAPTURE, or AUTHORIZATION_AND_CAPTURE   transaction \u0026gt; paymentMethod Alphanumeric 32 Select a valid Credit or Debit card Payment Method. See the available Payment Methods for Chile.   transaction \u0026gt; paymentCountry Alphanumeric 2 Set CL for Chile.   transaction \u0026gt; deviceSessionId Alphanumeric Max: 255 Session identifier of the device where the customer performs the transaction. For mor information, refer to this topic.   transaction \u0026gt; ipAddress Alphanumeric Max: 39 IP address of the device where the customer performs the transaction.   transaction \u0026gt; cookie Alphanumeric Max: 255 Cookie stored by the device where the customer performs the transaction.   transaction \u0026gt; userAgent Alphanumeric Max: 1024 The User agent of the browser where the customer performs the transaction.   transaction \u0026gt; extraParameters   Additional parameters or data associated with the request. The maximum size of each extraParameters name is 64 characters.\nIn JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;INSTALLMENTS_NUMBER\u0026quot;: 1\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   transactionResponse   The response data.   transactionResponse \u0026gt; orderId Number  The generated or existing order Id in PayU.   transactionResponse \u0026gt; transactionId Alphanumeric 36 The identifier of the transaction in PayU.   transactionResponse \u0026gt; state Alphanumeric Max: 32 The status of the transaction.   transactionResponse \u0026gt; responseCode Alphanumeric Max: 64 The response code associated with the status.   transactionResponse \u0026gt; paymentNetworkResponseCode Alphanumeric Max: 255 The response code returned by the financial network.   transactionResponse \u0026gt; paymentNetworkResponseErrorMessage Alphanumeric Max: 255 The error message returned by the financial network.   transactionResponse \u0026gt; trazabilityCode Alphanumeric Max: 32 The traceability code returned by the financial network.   transactionResponse \u0026gt; authorizationCode Alphanumeric Max: 12 The authorization code returned by the financial network.   transactionResponse \u0026gt; responseMessage Alphanumeric Max: 2048 Message associated with the response code.   transactionResponse \u0026gt; operationDate Date  Creation date of the response in the PayUÂ´s system.   transactionResponse \u0026gt; extraParameters   Additional parameters or data associated with the response. In JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;BANK_REFERENCED_CODE\u0026quot;: \u0026quot;CREDIT\u0026quot;\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;     Considerations  For payments with credit card tokens, include the parameter transaction.creditCardTokenId replacing the information of the credit card. For more information, refer to Tokenization API. By default, processing credit cards without security code is not enabled. If you want to enable this feature, contact your Sales representative. After this feature is enabled for you, send in the request the variable creditCard.processWithoutCvv2 as true and remove the variable creditCard.securityCode. Transactions with credit card (Authorization and Capture in one step) are only available for single i nstallment payments. Transactions in CHILEAN PESOS with decimal amounts are not allowed.  API call The following are the examples of the request and response of this payment method.\n JSON XML   Request example:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512325\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-15T20:35:48.975Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;75ae7a887dfd759894c57eb1bc5a4288\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 10000, \u0026#34;currency\u0026#34;: \u0026#34;CLP\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;123456789\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;0000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;125544\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;creditCard\u0026#34;: { \u0026#34;number\u0026#34;: \u0026#34;4037997623271984\u0026#34;, \u0026#34;securityCode\u0026#34;: \u0026#34;321\u0026#34;, \u0026#34;expirationDate\u0026#34;: \u0026#34;2030/12\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;APPROVED\u0026#34; }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;INSTALLMENTS_NUMBER\u0026#34;: 1 }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;VISA\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;deviceSessionId\u0026#34;: \u0026#34;vghs6tvkcle931686k1900o6e1\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;pt1t38347bs6jc9ruv2ecpv7o2\u0026#34;, \u0026#34;userAgent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 1400431556, \u0026#34;transactionId\u0026#34;: \u0026#34;14aed0cc-95cb-4b04-b4dd-0c7f8c3296e8\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: \u0026#34;456505\u0026#34;, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;14aed0cc-95cb-4b04-b4dd-0c7f8c3296e8\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;456505\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: \u0026#34;Approved transaction\u0026#34;, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1623834912248, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;BANK_REFERENCED_CODE\u0026#34;: \u0026#34;CREDIT\u0026#34;, \u0026#34;TRANSBANK_DIRECT_TOKEN\u0026#34;: \u0026#34;01ab306b62cd0ce17d462501b121ed6cac3794375054b80a51c01bad4ec51550\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null } }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;accountId\u0026gt;512325\u0026lt;/accountId\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-06-15T20:35:48.975Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;signature\u0026gt;75ae7a887dfd759894c57eb1bc5a4288\u0026lt;/signature\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payu.com/notify\u0026lt;/notifyUrl\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;10000\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;CLP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;123456789\u0026lt;/dniNumber\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;0000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;creditCard\u0026gt; \u0026lt;number\u0026gt;4037997623271984\u0026lt;/number\u0026gt; \u0026lt;securityCode\u0026gt;321\u0026lt;/securityCode\u0026gt; \u0026lt;expirationDate\u0026gt;2030/12\u0026lt;/expirationDate\u0026gt; \u0026lt;name\u0026gt;APPROVED\u0026lt;/name\u0026gt; \u0026lt;/creditCard\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;VISA\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;CL\u0026lt;/paymentCountry\u0026gt; \u0026lt;deviceSessionId\u0026gt;vghs6tvkcle931686k1900o6e1\u0026lt;/deviceSessionId\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;cookie\u0026gt;pt1t38347bs6jc9ruv2ecpv7o2\u0026lt;/cookie\u0026gt; \u0026lt;userAgent\u0026gt;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026lt;/userAgent\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400431549\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;937ed9fe-72d3-44e2-b1b8-e38e9f8e08a4\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;paymentNetworkResponseCode\u0026gt;185495\u0026lt;/paymentNetworkResponseCode\u0026gt; \u0026lt;trazabilityCode\u0026gt;937ed9fe-72d3-44e2-b1b8-e38e9f8e08a4\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;185495\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;responseMessage\u0026gt;Approved transaction\u0026lt;/responseMessage\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-16T04:13:51\u0026lt;/operationDate\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TRANSBANK_DIRECT_TOKEN\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;01abc29e7b32bbf011cdd2a1e9961c5d6bd068220f4b506b06c66e15de1acfd2\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Submit transaction with cash This method lets you process the payments in cash of your customers. To integrate with cash transactions, you must redirect the customer to the URL found in the response of the method; your customer selects cash and generates the payment code.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set SUBMIT_TRANSACTION.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key   transaction   This object has the transaction data.   transaction \u0026gt; order   This object has the order data.   transaction \u0026gt; order \u0026gt; accountId Number  Identifier of your account.   transaction \u0026gt; order \u0026gt; referenceCode Alphanumeric Min: 1 Max: 255 Represents the identifier of the order in your system.   transaction \u0026gt; order \u0026gt; description Alphanumeric Min: 1 Max: 255 Description of the order.   transaction \u0026gt; order \u0026gt; language Alphanumeric 2 Language used in emails sent to the buyer and the seller.   transaction \u0026gt; order \u0026gt; notifyUrl Alphanumeric Max: 2048 Confirmation URL of the order.   transaction \u0026gt; order \u0026gt; partnerId Alphanumeric Max: 255 Partner ID in PayU.   transaction \u0026gt; order \u0026gt; signature Alphanumeric Max: 255 The signature associated to the form. For more information refer Authentication signature.   transaction \u0026gt; order \u0026gt; shippingAddress   Shipping address.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 100 Address Line 1.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street2 Alphanumeric Max: 100 Address Line 2.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Address city.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Address State.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Address country.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; postalCode Alphanumeric Max: 8 Address Zip code.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; phone Alphanumeric Max: 11 Phone number associated to the address.   transaction \u0026gt; order \u0026gt; buyer   Buyer information.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; merchantBuyerId Alphanumeric Max: 100 Buyer ID in your system.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; fullName Alphanumeric Max: 150 Full name of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; emailAddress Alphanumeric Max: 255 E-mail of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; contactPhone Alphanumeric Max: 20 Phone number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress Alphanumeric  Shipping address of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 150 Buyer\u0026rsquo;s shipping address Line 1.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Buyer\u0026rsquo;s shipping address city.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Buyer\u0026rsquo;s shipping address state.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Buyer\u0026rsquo;s shipping address country in format ISO 3166 alpha-2.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; postalCode Number Max: 20 Buyer\u0026rsquo;s shipping address zip code.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; phone Number Max: 20 Buyer\u0026rsquo;s shipping address phone number.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt;  64 Amount of the order or its associated values.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE Alphanumeric 64 Amount of the transaction.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; value Number 19, 2 Specifies the amount of the transaction, this value may have two decimal digits (Ex. 10000.00 or 10000).   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; currency Alphanumeric 3 ISO code of the currency. See accepted currencies.   transaction \u0026gt; payer   Payer information.   transaction \u0026gt; payer \u0026gt; emailAddress Alphanumeric Max: 255 Payer e-mail address.   transaction \u0026gt; payer \u0026gt; merchantPayerId Alphanumeric Max: 100 Identifier of the payer in your system.   transaction \u0026gt; payer \u0026gt; fullName Alphanumeric Max: 150 Name of the payer which must meet the name sent in the parameter \u0026gt; creditCard \u0026gt; name for credit card payments.   transaction \u0026gt; payer \u0026gt; billingAddress   Billing address.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street1 Alphanumeric Max: 100 Billing Address Line 1.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street2 Alphanumeric Max: 100 Billing Address Line 2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; city Alphanumeric Max: 50 Billing address city.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; state Alphanumeric Max: 40 Billing address state.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; country Alphanumeric 2 Billing address country in format ISO 3166 Alpha-2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; postalCode Alphanumeric Max: 20 Billing address zip code.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; phone Alphanumeric Max: 20 Billing address phone number.   transaction \u0026gt; payer \u0026gt; birthdate Alphanumeric Max: 10 Buyer\u0026rsquo;s date of birth.   transaction \u0026gt; payer \u0026gt; contactPhone Alphanumeric Max: 20 Buyer\u0026rsquo;s phone number.   transaction \u0026gt; payer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; payer \u0026gt; dniType Alphanumeric 2 Identification type of the buyer. See Document types.   transaction \u0026gt; type Alphanumeric 32 As cash payments are performed in physical offices, the only available transaction type is AUTHORIZATION_AND_CAPTURE   transaction \u0026gt; paymentMethod Alphanumeric 32 Select a valid Payment Method in cash. See the available Payment Methods for Chile.   transaction \u0026gt; paymentCountry Alphanumeric 2 Set CL for Chile.   transaction \u0026gt; expirationDate Alphanumeric 23 Maximum date and time that the payer has to make the payment. Format YYYY-MM-DDTHH:MM:SS, for example 2021-06-12T16:07:11.586.   transaction \u0026gt; ipAddress Alphanumeric Max: 39 IP address of the device where the customer performs the transaction.   transaction \u0026gt; extraParameters   Additional parameters or data associated with the request. For cash payments, you need to include the response URL to redirect your customers back when they complete their payment.\nIn JSON, the extraParameters parameter is set as: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;NETWORK_CALLBACK_URL\u0026quot;: \u0026quot;http://www.test.com/response\u0026quot;\n}\nIn XML, the extraParameters parameter is set as: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;NETWORK_CALLBACK_URL\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;http://www.test.com/response\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   transactionResponse   The response data.   transactionResponse \u0026gt; orderId Number  The generated or existing order Id in PayU.   transactionResponse \u0026gt; transactionId Alphanumeric 36 The identifier of the transaction in PayU.   transactionResponse \u0026gt; state Alphanumeric Max: 32 The status of the transaction. As the payment is performed by the user in a physical office, the state for a successful transaction is PENDING   transactionResponse \u0026gt; paymentNetworkResponseCode Alphanumeric Max: 255 The response code returned by the financial network.   transactionResponse \u0026gt; paymentNetworkResponseErrorMessage Alphanumeric Max: 255 The error message returned by the financial network.   transactionResponse \u0026gt; trazabilityCode Alphanumeric Max: 32 The traceability code returned by the financial network.   transactionResponse \u0026gt; authorizationCode Alphanumeric Max: 12 The authorization code returned by the financial network.   transactionResponse \u0026gt; pendingReason Alphanumeric Max: 21 The reason code associated with the status, as mentioned in transactionResponse \u0026gt; state, the transaction is waiting for the payment.   transactionResponse \u0026gt; responseCode Alphanumeric Max: 64 The response code associated with the status. In this case, for successful transactions is PENDING_TRANSACTION_CONFIRMATION.   transactionResponse \u0026gt; responseMessage Alphanumeric Max: 2048 Message associated with the response code.   transactionResponse \u0026gt; operationDate Date  Creation date of the response in the PayUÂ´s system.   transactionResponse \u0026gt; extraParameters   For cash payments, extraParameters has a single element with the URL to which you must redirect your customer.\nIn JSON, the extraParameters parameter is: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;BANK_URL\u0026quot;: \u0026quot;https://www.multicaja.cl/bdp/order.xhtml?id=123456789012345\u0026quot;\n}\nIn XML, the extraParameters parameter is: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;BANK_URL\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;https://www.multicaja.cl/bdp/order.xhtml?id=123456789012345\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;     Considerations  The parameter transaction.expirationDate is not mandatory. If you don\u0026rsquo;t send this parameter, its default value for is seven days after the current date at 12:00 pm. You must set a response URL in the parameter NETWORK_CALLBACK_URL inside transaction.extraParameters; this URL redirects the user back to your page after they finish the online payment procedure. You must redirect the payer to the Klap webpage (fka as Multicaja) to let them perform the cash payment. This URL is found in the BANK_URL parameter in the response.  API call The following are the bodies of the request and response of this payment method.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512325\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-15T20:35:48.975Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;75ae7a887dfd759894c57eb1bc5a4288\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 10000, \u0026#34;currency\u0026#34;: \u0026#34;CLP\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;0000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;125544\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;NETWORK_CALLBACK_URL\u0026#34;: \u0026#34;http://domain.com/backup_cart/response.php\u0026#34; }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;MULTICAJA\u0026#34;, \u0026#34;expirationDate\u0026#34;: \u0026#34;2021-06-18T20:00:03.105\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 857794995, \u0026#34;transactionId\u0026#34;: \u0026#34;f468aa69-82e0-410e-9cc2-3cabba0f970d\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;PENDING\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: null, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;462623325642199\u0026#34;, \u0026#34;authorizationCode\u0026#34;: null, \u0026#34;pendingReason\u0026#34;: \u0026#34;AWAITING_NOTIFICATION\u0026#34;, \u0026#34;responseCode\u0026#34;: \u0026#34;PENDING_TRANSACTION_CONFIRMATION\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: null, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: null, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;BANK_URL\u0026#34;: \u0026#34;https://apidev.mcdesaqa.cl/bdp/order.xhtml?id=462623325642199\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null } }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;accountId\u0026gt;512325\u0026lt;/accountId\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-06-15T20:35:48.975Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;signature\u0026gt;75ae7a887dfd759894c57eb1bc5a4288\u0026lt;/signature\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payu.com/notify\u0026lt;/notifyUrl\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;10000\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;CLP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;0000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;NETWORK_CALLBACK_URL\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;http://domain.com/backup_cart/response.php\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;MULTICAJA\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;CL\u0026lt;/paymentCountry\u0026gt; \u0026lt;expirationDate\u0026gt;2021-06-18T20:00:03.105\u0026lt;/expirationDate\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400432986\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;71a72319-f143-4359-8cb9-bc44a21d2b25\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;PENDING\u0026lt;/state\u0026gt; \u0026lt;trazabilityCode\u0026gt;a0d9d7d6-000a-4777-af78-e33917a30fd8\u0026lt;/trazabilityCode\u0026gt; \u0026lt;pendingReason\u0026gt;AWAITING_PAYMENT_IN_ENTITY\u0026lt;/pendingReason\u0026gt; \u0026lt;responseCode\u0026gt;PENDING_PAYMENT_IN_ENTITY\u0026lt;/responseCode\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-16T12:22:28\u0026lt;/operationDate\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;EXPIRATION_DATE\u0026lt;/string\u0026gt; \u0026lt;date\u0026gt;2021-06-16T17:42:53\u0026lt;/date\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;URL_PAYMENT_REDIRECT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;https://webpay3gint.transbank.cl/webpayserver/initTransaction\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TRANSBANK_DIRECT_TOKEN\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;01abbca6da54f4e4ef9eb37fb9cacf72fdcc52797f6a9ca20377bc59eb0d2706\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Submit transaction with bank transfer This method lets you process the bank transfer payments of your customers. To integrate with these transactions, you must redirect the customer to the URL found in the response of the method.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set SUBMIT_TRANSACTION.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key   transaction   This object has the transaction data.   transaction \u0026gt; order   This object has the order data.   transaction \u0026gt; order \u0026gt; accountId Number  Identifier of your account.   transaction \u0026gt; order \u0026gt; referenceCode Alphanumeric Min: 1 Max: 255 Represents the identifier of the order in your system.   transaction \u0026gt; order \u0026gt; description Alphanumeric Min: 1 Max: 255 Description of the order.   transaction \u0026gt; order \u0026gt; language Alphanumeric 2 Language used in emails sent to the buyer and the seller.   transaction \u0026gt; order \u0026gt; notifyUrl Alphanumeric Max: 2048 Confirmation URL of the order.   transaction \u0026gt; order \u0026gt; partnerId Alphanumeric Max: 255 Partner ID in PayU.   transaction \u0026gt; order \u0026gt; signature Alphanumeric Max: 255 The signature associated to the form. For more information refer Authentication signature.   transaction \u0026gt; order \u0026gt; shippingAddress   Shipping address.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 100 Address Line 1.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; street2 Alphanumeric Max: 100 Address Line 2.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Address city.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Address State.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Address country.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; postalCode Alphanumeric Max: 8 Address Zip code.   transaction \u0026gt; order \u0026gt; shippingAddress \u0026gt; phone Alphanumeric Max: 11 Phone number associated to the address.   transaction \u0026gt; order \u0026gt; buyer   Buyer information.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; merchantBuyerId Alphanumeric Max: 100 Buyer ID in your system.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; fullName Alphanumeric Max: 150 Full name of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; emailAddress Alphanumeric Max: 255 E-mail of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; contactPhone Alphanumeric Max: 20 Phone number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress Alphanumeric  Shipping address of the buyer.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; street1 Alphanumeric Max: 150 Buyer\u0026rsquo;s shipping address Line 1.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; city Alphanumeric Max: 50 Buyer\u0026rsquo;s shipping address city.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; state Alphanumeric Max: 40 Buyer\u0026rsquo;s shipping address state.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; country Alphanumeric 2 Buyer\u0026rsquo;s shipping address country in format ISO 3166 alpha-2.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; postalCode Number Max: 20 Buyer\u0026rsquo;s shipping address zip code.   transaction \u0026gt; order \u0026gt; buyer \u0026gt; shippingAddress \u0026gt; phone Number Max: 20 Buyer\u0026rsquo;s shipping address phone number.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt;  64 Amount of the order or its associated values.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE Alphanumeric 64 Amount of the transaction.   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; value Number 19, 2 Specifies the amount of the transaction, this value may have two decimal digits (Ex. 10000.00 or 10000).   transaction \u0026gt; order \u0026gt; additionalValues \u0026gt; TX_VALUE \u0026gt; currency Alphanumeric 3 ISO code of the currency. See accepted currencies.   transaction \u0026gt; payer   Payer information.   transaction \u0026gt; payer \u0026gt; emailAddress Alphanumeric Max: 255 Payer e-mail address.   transaction \u0026gt; payer \u0026gt; merchantPayerId Alphanumeric Max: 100 Identifier of the payer in your system.   transaction \u0026gt; payer \u0026gt; fullName Alphanumeric Max: 150 Name of the payer which must meet the name sent in the parameter \u0026gt; creditCard \u0026gt; name for credit card payments.   transaction \u0026gt; payer \u0026gt; billingAddress   Billing address.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street1 Alphanumeric Max: 100 Billing Address Line 1.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; street2 Alphanumeric Max: 100 Billing Address Line 2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; city Alphanumeric Max: 50 Billing address city.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; state Alphanumeric Max: 40 Billing address state.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; country Alphanumeric 2 Billing address country in format ISO 3166 Alpha-2.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; postalCode Alphanumeric Max: 20 Billing address zip code.   transaction \u0026gt; payer \u0026gt; billingAddress \u0026gt; phone Alphanumeric Max: 20 Billing address phone number.   transaction \u0026gt; payer \u0026gt; birthdate Alphanumeric Max: 10 Buyer\u0026rsquo;s date of birth.   transaction \u0026gt; payer \u0026gt; contactPhone Alphanumeric Max: 20 Buyer\u0026rsquo;s phone number.   transaction \u0026gt; payer \u0026gt; dniNumber Alphanumeric Max: 20 Identification number of the buyer.   transaction \u0026gt; payer \u0026gt; dniType Alphanumeric 2 Identification type of the buyer. See Document types.   transaction \u0026gt; type Alphanumeric 32 As cash payments are performed in physical offices, the only available transaction type is AUTHORIZATION_AND_CAPTURE   transaction \u0026gt; paymentMethod Alphanumeric 32 Select a valid Payment Method in Bank transfer. See the available Payment Methods for Chile.   transaction \u0026gt; paymentCountry Alphanumeric 2 Set CL for Chile.   transaction \u0026gt; deviceSessionId Alphanumeric Max: 255 Session identifier of the device where the customer performs the transaction. For mor information, refer to this topic.   transaction \u0026gt; ipAddress Alphanumeric Max: 39 IP address of the device where the customer performs the transaction.   transaction \u0026gt; cookie Alphanumeric Max: 255 Cookie stored by the device where the customer performs the transaction.   transaction \u0026gt; userAgent Alphanumeric Max: 1024 The User agent of the browser where the customer performs the transaction.   transaction \u0026gt; extraParameters   Additional parameters or data associated with the request. For Bank transfer payments, this is the response page of your commerce.\nIn JSON, the extraParameters parameter is set as: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;RESPONSE_URL\u0026quot;: \u0026quot;http://www.test.com/response\u0026quot;\n}\nIn XML, the extraParameters parameter is set as: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;RESPONSE_URL\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;http://www.test.com/response\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   transactionResponse   The response data.   transactionResponse \u0026gt; orderId Number  The generated or existing order Id in PayU.   transactionResponse \u0026gt; transactionId Alphanumeric 36 The identifier of the transaction in PayU.   transactionResponse \u0026gt; state Alphanumeric Max: 32 The status of the transaction. As the payment is performed by the user in a physical office, the state for a successful transaction is PENDING   transactionResponse \u0026gt; paymentNetworkResponseCode Alphanumeric Max: 255 The response code returned by the financial network.   transactionResponse \u0026gt; paymentNetworkResponseErrorMessage Alphanumeric Max: 255 The error message returned by the financial network.   transactionResponse \u0026gt; trazabilityCode Alphanumeric Max: 32 The traceability code returned by the financial network.   transactionResponse \u0026gt; authorizationCode Alphanumeric Max: 12 The authorization code returned by the financial network.   transactionResponse \u0026gt; pendingReason Alphanumeric Max: 21 The reason code associated with the status, as mentioned in transactionResponse \u0026gt; state, the transaction is waiting for the payment.   transactionResponse \u0026gt; responseCode Alphanumeric Max: 64 The response code associated with the status. In this case, for successful transactions is PENDING_PAYMENT_IN_ENTITY.   transactionResponse \u0026gt; responseMessage Alphanumeric Max: 2048 Message associated with the response code.   transactionResponse \u0026gt; operationDate Date  Creation date of the response in the PayUÂ´s system.   transactionResponse \u0026gt; extraParameters   Additional parameters or data associated with the response.\nIn JSON, the extraParameters parameter follows this structure: \u0026quot;extraParameters\u0026quot;: {\n\u0026quot;URL_PAYMENT_REDIRECT\u0026quot;: \u0026quot;https://webpay3gint.transbank.cl/webpayserver/initTransaction\u0026quot;\n}\nIn XML, the extraParameters parameter follows this structure: \u0026lt;extraParameters\u0026gt;\n\u0026lt;entry\u0026gt;\n\u0026lt;string\u0026gt;URL_PAYMENT_REDIRECT\u0026lt;/string\u0026gt;\n\u0026lt;string\u0026gt;https://webpay3gint.transbank.cl/webpayserver/initTransaction\u0026lt;/string\u0026gt;\n\u0026lt;/entry\u0026gt;\n\u0026lt;/extraParameters\u0026gt;     Considerations  If you don\u0026rsquo;t send the RESPONSE_URL parameter in transaction.extraParameters, the API took the value from the Response URL variable in your PayU Module (Settings \u0026gt; Technical configuration). When you process bank transfer payment, you must redirect the customer to the URL found in the URL_PAYMENT_REDIRECT extra parameter concatenated with the TRANSBANK_DIRECT_TOKEN extra parameter as follows: URL_PAYMENT_REDIRECT?token_ws=TRANSBANK_DIRECT_TOKEN. If the payment request is successful, the transaction has state PENDING and responseCode PENDING_PAYMENT_IN_ENTITY; this is because the payer is redirected to the selected bank to complete the payment. The responde page must have the following variables:     Variable Description     transactionState State of the transaction.   reference_pol Reference code to identify a transaction in PayU.   TX_VALUE Transaction amount.   authorizationCode Authorization code of the transaction.   processingDate Transaction date.   cc_number Visible number of the card used in the transaction.    The variables above are sent via GET.\nAPI call The following are the bodies of the request and response of this payment method.\n JSON XML   Request body:\n{ \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;SUBMIT_TRANSACTION\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34;, \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34; }, \u0026#34;transaction\u0026#34;: { \u0026#34;order\u0026#34;: { \u0026#34;accountId\u0026#34;: \u0026#34;512325\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-06-15T20:35:48.975Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description\u0026#34;, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;signature\u0026#34;: \u0026#34;75ae7a887dfd759894c57eb1bc5a4288\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payu.com/notify\u0026#34;, \u0026#34;additionalValues\u0026#34;: { \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 10000, \u0026#34;currency\u0026#34;: \u0026#34;CLP\u0026#34; } }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;RM\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Talagante\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; } }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;RESPONSE_URL\u0026#34;: \u0026#34;http://www.test.com/response\u0026#34; }, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;paymentMethod\u0026#34;: \u0026#34;TRANSBANK_DEBIT\u0026#34;, \u0026#34;paymentCountry\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;deviceSessionId\u0026#34;: \u0026#34;vghs6tvkcle931686k1900o6e1\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;pt1t38347bs6jc9ruv2ecpv7o2\u0026#34;, \u0026#34;userAgent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026#34; }, \u0026#34;test\u0026#34;: false } \nResponse body:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;orderId\u0026#34;: 1400432466, \u0026#34;transactionId\u0026#34;: \u0026#34;e2609a58-97d6-4a65-8638-1b03da03cc7a\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;PENDING\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: null, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;5f0cac61-c023-4fa3-bf27-ff888fa36c3c\u0026#34;, \u0026#34;authorizationCode\u0026#34;: null, \u0026#34;pendingReason\u0026#34;: \u0026#34;AWAITING_PAYMENT_IN_ENTITY\u0026#34;, \u0026#34;responseCode\u0026#34;: \u0026#34;PENDING_PAYMENT_IN_ENTITY\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: null, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1623856942412, \u0026#34;referenceQuestionnaire\u0026#34;: null, \u0026#34;extraParameters\u0026#34;: { \u0026#34;EXPIRATION_DATE\u0026#34;: 1623875847781, \u0026#34;URL_PAYMENT_REDIRECT\u0026#34;: \u0026#34;https://webpay3gint.transbank.cl/webpayserver/initTransaction\u0026#34;, \u0026#34;TRANSBANK_DIRECT_TOKEN\u0026#34;: \u0026#34;01ab155164939156988ee462d09ed5613b7efd297fe97b099c684ec8599c5cc5\u0026#34; }, \u0026#34;additionalInfo\u0026#34;: null } }   Request body:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;SUBMIT_TRANSACTION\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;order\u0026gt; \u0026lt;accountId\u0026gt;512325\u0026lt;/accountId\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-06-15T20:35:48.975Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;signature\u0026gt;75ae7a887dfd759894c57eb1bc5a4288\u0026lt;/signature\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payu.com/notify\u0026lt;/notifyUrl\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;10000\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;CLP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;0000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;Autopista Del Sol, 0 - Km.43 Costado Sur\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;RM\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Talagante\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;RESPONSE_URL\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;http://www.test.com/response\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;TRANSBANK_DEBIT\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;CL\u0026lt;/paymentCountry\u0026gt; \u0026lt;deviceSessionId\u0026gt;vghs6tvkcle931686k1900o6e1\u0026lt;/deviceSessionId\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;cookie\u0026gt;pt1t38347bs6jc9ruv2ecpv7o2\u0026lt;/cookie\u0026gt; \u0026lt;userAgent\u0026gt;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026lt;/userAgent\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse body:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;orderId\u0026gt;1400432986\u0026lt;/orderId\u0026gt; \u0026lt;transactionId\u0026gt;71a72319-f143-4359-8cb9-bc44a21d2b25\u0026lt;/transactionId\u0026gt; \u0026lt;state\u0026gt;PENDING\u0026lt;/state\u0026gt; \u0026lt;trazabilityCode\u0026gt;a0d9d7d6-000a-4777-af78-e33917a30fd8\u0026lt;/trazabilityCode\u0026gt; \u0026lt;pendingReason\u0026gt;AWAITING_PAYMENT_IN_ENTITY\u0026lt;/pendingReason\u0026gt; \u0026lt;responseCode\u0026gt;PENDING_PAYMENT_IN_ENTITY\u0026lt;/responseCode\u0026gt; \u0026lt;operationDate\u0026gt;2021-06-16T12:22:28\u0026lt;/operationDate\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;EXPIRATION_DATE\u0026lt;/string\u0026gt; \u0026lt;date\u0026gt;2021-06-16T17:42:53\u0026lt;/date\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;URL_PAYMENT_REDIRECT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;https://webpay3gint.transbank.cl/webpayserver/initTransaction\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TRANSBANK_DIRECT_TOKEN\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;01abbca6da54f4e4ef9eb37fb9cacf72fdcc52797f6a9ca20377bc59eb0d2706\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;/paymentResponse\u0026gt;    Available payment methods query This method returns a list of the payment methods available in all countries.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set GET_PAYMENT_METHODS.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction. Possible values are ERROR and SUCCESS.   error Alphanumeric Max: 2048 The error message associated when the response code is ERROR.   paymentMethods   List of the payment methods.   paymentMethods \u0026gt; paymentMethodComplete   This object has the information of a payment method.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; id Numeric  Payment method identifier.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; description Alphanumeric Max: 32 Payment method name.   paymentMethods \u0026gt; paymentMethodComplete \u0026gt; country Alphanumeric 2 ISO code of the Payment method country.     API call The following are the examples of the request and response of this method. For the sake of the example, the request and response here show two payment methods.\n JSON XML   Request example:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;GET_PAYMENT_METHODS\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;paymentMethods\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;716\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;VISA\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;enabled\u0026#34;: true, \u0026#34;reason\u0026#34;: null }, { \u0026#34;id\u0026#34;: \u0026#34;712\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;DINERS\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CL\u0026#34;, \u0026#34;enabled\u0026#34;: true, \u0026#34;reason\u0026#34;: null } ] }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;GET_PAYMENT_METHODS\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;paymentMethodsResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;paymentMethods\u0026gt; \u0026lt;paymentMethodComplete\u0026gt; \u0026lt;id\u0026gt;716\u0026lt;/id\u0026gt; \u0026lt;description\u0026gt;VISA\u0026lt;/description\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/paymentMethodComplete\u0026gt; \u0026lt;paymentMethodComplete\u0026gt; \u0026lt;id\u0026gt;712\u0026lt;/id\u0026gt; \u0026lt;description\u0026gt;DINERS\u0026lt;/description\u0026gt; \u0026lt;country\u0026gt;CL\u0026lt;/country\u0026gt; \u0026lt;enabled\u0026gt;true\u0026lt;/enabled\u0026gt; \u0026lt;/paymentMethodComplete\u0026gt; \u0026lt;/paymentMethods\u0026gt; \u0026lt;/paymentMethodsResponse\u0026gt;    Ping The PING method lets you verify the connection to our platform.\nVariables for request and response  Request     Field name Format Size Description     language Alphanumeric 2 Language used in the request, this language is used to display the error messages generated. See supported languages.   command Alphanumeric Max: 32 Set PING.   test (JSON)isTest (XML) Boolean  Set true if the request is in test mode. Otherwise, set false.   merchant   This object has the authentication data.   merchant \u0026gt; apiLogin Alphanumeric Min: 12 Max: 32 User or login provided by PayU. How do I get my API Login   merchant \u0026gt; apiKey Alphanumeric Min: 6 Max: 32 Password provided by PayU. How do I get my API Key      Response     Field name Format Size Description     code Alphanumeric  The response code of the transaction.   error Alphanumeric Max: 2048 The error message associated if an error ocurred.   transactionResponse transactionResponse Max: 2048 The response of the PING method if an error ocurred.     API call The following are the examples of the request and response of this method.\n JSON XML   Request example:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;PING\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;transactionResponse\u0026#34;: null }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;PING\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;paymentResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;/paymentResponse\u0026gt;    ","excerpt":"To integrate with Payments API Chile, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/payments-api-chile.html","title":"Payments API - Chile"},{"body":"To integrate with Payments API Colombia, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit card Submit transaction with cash Submit transaction with bank transfer Bank List - PSE Active payment methods query Ping  Submit transaction with credit cards Submit transaction with cash Submit transaction with bank transfer Bank List - PSE Active payment methods query Ping The PING method lets you verify the connection to our platform. The following are the request and response examples for this method.\n","excerpt":"To integrate with Payments API Colombia, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/payments-api-colombia.html","title":"Payments API - Colombia"},{"body":"To integrate with Payments API Mexico, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit card Submit transaction with cash Submit transaction with bank transfer Bank List - PSE Active payment methods query Ping  Submit transaction with credit cards Submit transaction with cash Submit transaction with bank transfer Active payment methods query Ping The PING method lets you verify the connection to our platform. The following are the request and response examples for this method.\n","excerpt":"To integrate with Payments API Mexico, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/payments-api-mexico.html","title":"Payments API - Mexico"},{"body":"To integrate with Payments API Panama, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit card Active payment methods query Ping  Submit transaction with credit cards Active payment methods query Ping ","excerpt":"To integrate with Payments API Panama, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/payments-api-panama.html","title":"Payments API - Panama"},{"body":"To integrate with Payments API Peru, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/payments-api/4.0/service.cgi Production: https://api.payulatam.com/payments-api/4.0/service.cgi   Available methods Payments API includes the following methods:\n Submit transaction with credit card Submit transaction with cash Active payment methods query Ping  Submit transaction with credit cards Submit transaction with cash Active payment methods query Ping ","excerpt":"To integrate with Payments API Peru, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/payments-api-peru.html","title":"Payments API - Peru"},{"body":"According to your business needs you can use the integration services or the PayU tools.\nIntegrations Implement PayU with the aggregator model or gateway, using PayUâ€™s financial agreements or your own\nCheckout integration PayU Checkout is an integration that allows you to collect through a PayU web form from any device in a simple, fast and secure way.  PayU manages the payment system Easier integration, equally secure Since PayU manages the payment platform, it is easier to get PCI DSS certification  Learn more about WebCheckout integration  API or SDK integration Through API or SDK integrations, you can receive payments securely from anywhere you like, on your website or mobile app.  Design your checkout and manage the payment system of your website. Access to additional services such as Tokenization or Recurring payments  Learn more about API integration Learn more about SDK integration     PayU Tools Any of the following tools give you more options to sell and receive payments online.\nPayment request Receive payments even if you don't have a web page.\n Shopping cart plugins Integrate your shopping cart solution with any of our available plugins.\n PayU module Manage your PayU account, generate sales reports, query your account balance or transfer money to your bank account.\n Reports See the overview of your account including, your sales, your financial statement, and your custom reports.\n Disputes Manage the dispute processes generated in your PayU account.\n Payment coupons Send payment coupons to your customers, they can pay in the cash branches available.\n   ","excerpt":"According to your business needs you can use the integration services or the PayU tools. â€¦","ref":"/docs/getting-started/select-your-integration.html","title":"Select Your Integration"},{"body":"","excerpt":"","ref":"/docs/services.html","title":"Services"},{"body":"Considerations Before using the Queries feature, take into account the following considerations:\n It is recommended to use Queries for transactions in PENDING state. According to the payment method, the time to perform the query may vary. Nevertheless, it is recommended to perform the first query seven minutes after the transaction is created. Do not retry a query of a transaction when PayU indicates that the transaction does not exist. Bank transfer transactions are only available every ten minutes.  Query criteria To query transactions, PayU allows you to search by any of the following criteria:\n Order Id: it is generated by PayU. Identifies the order in PayU system and it the main element where any movement is recorded (charges, retries, refunds, etc) Transaction Id: PayU generates this identifier per each movement associated with an order (Order ID). Reference Number: it is generated by the shop. Identifies the order or purchase in your system, PayU saves this value as you send it.  What\u0026rsquo;s next? The integration with this feature can be performed using one of our integration types:\n For API integrations, refer to this topic For SDK integrations, refer to this topic  ","excerpt":"Considerations Before using the Queries feature, take into account the following considerations:\n It â€¦","ref":"/docs/services/queries.html","title":"Queries for transactions"},{"body":"You can connect your online store to the PayU platform and the checkout process will be handled on your website. To integrate this option you must have a PayU Business account and advanced programming skills.\nAccess multiple payment methods (varies per country), including credit cards, bank transfers, and cash payments.\nInitial settings PayU allows you to integrate with the transactional gateway, available payment tools and Queries by developing a HTTPS client to send the transaction information through SSL. It is critical that sensitive transaction data such as credit card number, expiration date, are not stored. It is recommended to follow PCI DSSâ€™ best practices (Payment Card Industry Data Security Standard).\nThe transmission of transactions is secured through a TLS (Transport Layer Security) 256-bit connection from the shop\u0026rsquo;s server our payment Gateway. The exchange of messages is done via JSON or XML strings and operations are distinguished by a command that is included in the request. Check out the following JSON and XML examples:\n JSON XML   POST /payments-api/4.0/service.cgi HTTP/1.1 Host: sandbox.api.payulatam.com Content-Type: application/json; charset=utf-8 Accept: application/json Content-Length: length { \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;GET_PAYMENT_METHODS\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;xxxxxxxxxxxxx\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;xxxxxxxxxxxxx\u0026#34; } }   POST /payments-api/4.0/service.cgi HTTP/1.1 Host: sandbox.api.payulatam.com Content-Type: application/xml; charset=utf-8 Accept: application/xml Content-Length: length \u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;GET_PAYMENT_METHODS\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;xxxxxxxxxxxxx\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;xxxxxxxxxxxxx\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt;    You can set the language you want to use in the request through the Content-type and Accept HTTP headers. You can use all possible combinations:\nConsiderations  You must have an active PayU account. You must install a valid SSL certificate in your server and your site must be able to make SSL connections. Due to this, the virtual machine must have appropriate security extensions. Temporarily, do not use security certificates elliptic curve or those who have the suite of encryption TLS_ECDHE_ECDSA_WITH_RC4_128_SHA in your payment requests. You must have CGI or server languages such as Java, C#, VB, PHP, etc. You must be able to store your authentication credentials (API Key and API Login) safely. The encoding for messages must be UTF-8. The dates must have format yyyy-MM-ddTHH:mm:ss, the time format is 24 hours. Example: 2015-08-22T21:35:12. Normally the connection guarantees response times of three seconds on average. If there is an unusual situation, the maximum response time is one minute. It is highly recommended that you set timeouts when you connect with PayU. It is important to validate the length and numbers of credit cards by franchise, together with the security codes.   Available features ","excerpt":"You can connect your online store to the PayU platform and the checkout process will be handled on â€¦","ref":"/docs/integrations/api-integration.html","title":"API Integration"},{"body":"Prerequisites  You need an active account in PayU Latam. Having installed Drupal Commerce Kickstart 7.xx. Having the PayU\u0026rsquo;s Drupal plugin downloaded and stored in an accessible location. Click here to download it. Having access to the Drupal installation folder. Having access to the Drupal backend.  Installation The process to install the plugin in the Drupal server only requires to unzip the plugin in path \\sites\\all\\modules. The unzipped folder has the following structure:\nConfiguration  Log in to the Drupal\u0026rsquo;s administration panel. Open the Site settings menu and click Modules option inside the Advanced settings section.  Locate and activate the module Payment Payulatam. YOu can use the search filter to find it easier.\nOnce finish, click Save configuration.  Back in the Drupal\u0026rsquo;s administration panel. Open the Store settings menu and click Payment methods.\nFind Payment gateway PayuLatam in the Disabled payment method rules list and click enable.  If the activation was successful, Drupal shows the following message\nNow, click edit link in the recently enabled method.\nThen, locate the Actions section and click edit next to the action Enable payment method: PayuLatam. Here, configure the plugin using your PayU account.   API KEY: Unique key of your commerce, you can get this information in your PayU Module (Settings \u0026gt; Technical configuration \u0026gt; API Key). Merchant Id: ID of your commerce in PayU Latam. Account Id: ID of the PayU account according to the country where you want to sell. Test Enabled: Set No if you want to process in the Production environment. Otherwise, set Yes.  Leave the other fields with their pre-configured values.\nNote For testing purposes, you can use the Merchant ID, APIKey, and Account ID available in Test Your Solution.\nOnce you are in the credit card payment form, and ensuring that you have the message at the top of the gateway Transaction in test mode, you must:\n Enter the text APPROVED in the Full Name field if you want the transaction to be approved, REJECTED if you want it to be rejected or PENDING if you want it to be pending. You must enter a valid card number in the Card Number field according to the selected franchise. For this, you can use an online credit card generator. All other fields can be random.   At this point, your customers can pay with PayU Latam when they do the checkout in the Drupal\u0026rsquo;s shopping cart.\n","excerpt":"Prerequisites  You need an active account in PayU Latam. Having installed Drupal Commerce Kickstart â€¦","ref":"/docs/tools/shopping-cart-plugins/drupal.html","title":"Drupal"},{"body":"To integrate with Queries API, target your request to the following URLs according to your environment.\nURL  Test: https://sandbox.api.payulatam.com/reports-api/4.0/service.cgi Production: https://api.payulatam.com/reports-api/4.0/service.cgi   Available methods Queries API includes the following methods:\n Query by Order Id Query by Transaction Id Query by Reference Id Ping  Query by Order Id Order Id is a value generated by PayU to identify all the transactions generated for a payment request performed by your customer. You can use the ORDER_DETAIL command to consult the status of an Order by its identifier.\nThe following are the request and response examples for this operation.\n JSON XML   Request example:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;ORDER_DETAIL\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; }, \u0026#34;details\u0026#34;: { \u0026#34;orderId\u0026#34;: 857695047 } } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;result\u0026#34;: { \u0026#34;payload\u0026#34;: { \u0026#34;id\u0026#34;: 857695047, \u0026#34;accountId\u0026#34;: 512321, \u0026#34;status\u0026#34;: \u0026#34;CAPTURED\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;PRODUCT_TEST_2021-05-03T18:01:10.946Z\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;Payment test description Documentation\u0026#34;, \u0026#34;airlineCode\u0026#34;: null, \u0026#34;language\u0026#34;: \u0026#34;es\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://www.payulatam.com/confirmation\u0026#34;, \u0026#34;shippingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;calle 100\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Medellin\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Antioquia\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;0000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; }, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second buyer name\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;buyer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;buyerAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;calle 100\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;5555487\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Medellin\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Antioquia\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; }, \u0026#34;dniNumber\u0026#34;: \u0026#34;123456789\u0026#34;, \u0026#34;cnpj\u0026#34;: null }, \u0026#34;antifraudMerchantId\u0026#34;: null, \u0026#34;isTest\u0026#34;: true, \u0026#34;transactions\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;5fde3c2c-540d-4579-96f7-2a4b8c65a951\u0026#34;, \u0026#34;order\u0026#34;: null, \u0026#34;creditCard\u0026#34;: { \u0026#34;maskedNumber\u0026#34;: \u0026#34;547130******0003\u0026#34;, \u0026#34;issuerBank\u0026#34;: null, \u0026#34;name\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;cardType\u0026#34;: null }, \u0026#34;bankAccount\u0026#34;: null, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;parentTransactionId\u0026#34;: null, \u0026#34;paymentMethod\u0026#34;: \u0026#34;MASTERCARD\u0026#34;, \u0026#34;source\u0026#34;: null, \u0026#34;paymentCountry\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: null, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;00000000\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;00000000\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: null, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1620064792953, \u0026#34;extraParameters\u0026#34;: null }, \u0026#34;deviceSessionId\u0026#34;: \u0026#34;vghs6tvkcle931686k1900o6e1\u0026#34;, \u0026#34;ipAddress\u0026#34;: \u0026#34;127.0.0.1\u0026#34;, \u0026#34;cookie\u0026#34;: \u0026#34;pt1t38347bs6jc9ruv2ecpv7o2\u0026#34;, \u0026#34;userAgent\u0026#34;: \u0026#34;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026#34;, \u0026#34;expirationDate\u0026#34;: null, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;First name and second payer name\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;calle 93\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;125544\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;Bogota\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;Bogota DC\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;000000\u0026#34;, \u0026#34;phone\u0026#34;: \u0026#34;7563126\u0026#34; }, \u0026#34;emailAddress\u0026#34;: \u0026#34;payer_test@test.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: \u0026#34;7563126\u0026#34;, \u0026#34;dniNumber\u0026#34;: \u0026#34;5415668464654\u0026#34;, \u0026#34;dniType\u0026#34;: null }, \u0026#34;termsAndConditionId\u0026#34;: 202, \u0026#34;additionalValues\u0026#34;: { \u0026#34;PM_PAYER_COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_TOTAL_AMOUNT\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_INTEREST_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_NETWORK_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;CURRENT_TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_PRICING_VALUES\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PURCHASE_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; } }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;MIN_SHIPPING_PAYER\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;BANK_REFERENCED_CODE\u0026#34;: \u0026#34;CREDIT\u0026#34;, \u0026#34;PRICING_PROFILE_GROUP_ID\u0026#34;: \u0026#34;MG-PRICING_2_341559\u0026#34;, \u0026#34;MAX_SHIPPING_MERCHANT\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;PERCENT_SHIPPING_MERCHANT\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;MAX_SHIPPING_PAYER\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;MERCHANT_PROFILE_ID\u0026#34;: \u0026#34;MG-PRICING_1_51803\u0026#34;, \u0026#34;MIN_SHIPPING_MERCHANT\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;INSTALLMENTS_NUMBER\u0026#34;: \u0026#34;1\u0026#34;, \u0026#34;PAYMENT_WAY_ID\u0026#34;: \u0026#34;4\u0026#34; } } ], \u0026#34;additionalValues\u0026#34;: { \u0026#34;PM_PAYER_COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_INTEREST_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_NETWORK_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_PRICING_VALUES\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PURCHASE_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 50000.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; } }, \u0026#34;creationDate\u0026#34;: 1620064873257, \u0026#34;isCreatedUsingStandardIntegrationParams\u0026#34;: null, \u0026#34;merchantId\u0026#34;: 508029, \u0026#34;processedTransactionId\u0026#34;: \u0026#34;5fde3c2c-540d-4579-96f7-2a4b8c65a951\u0026#34;, \u0026#34;orderSignature\u0026#34;: \u0026#34;49f80210a72e9b7cafe9001338450bbb\u0026#34; } } }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;ORDER_DETAIL\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;details class=\u0026#34;java.util.HashMap\u0026#34;\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;orderId\u0026lt;/string\u0026gt; \u0026lt;object class=\u0026#34;java.lang.Integer\u0026#34;\u0026gt;2637540\u0026lt;/object\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/details\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;reportingResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;result\u0026gt; \u0026lt;payload class=\u0026#34;order\u0026#34;\u0026gt; \u0026lt;id\u0026gt;857695047\u0026lt;/id\u0026gt; \u0026lt;accountId\u0026gt;512321\u0026lt;/accountId\u0026gt; \u0026lt;status\u0026gt;CAPTURED\u0026lt;/status\u0026gt; \u0026lt;referenceCode\u0026gt;PRODUCT_TEST_2021-05-03T18:01:10.946Z\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;Payment test description Documentation\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;es\u0026lt;/language\u0026gt; \u0026lt;notifyUrl\u0026gt;http://www.payulatam.com/confirmation\u0026lt;/notifyUrl\u0026gt; \u0026lt;shippingAddress\u0026gt; \u0026lt;street1\u0026gt;calle 100\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;Medellin\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Antioquia\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CO\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;0000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/shippingAddress\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;1\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second buyer name\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;buyer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;buyerAddress\u0026gt; \u0026lt;street1\u0026gt;calle 100\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;5555487\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;Medellin\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Antioquia\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CO\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/buyerAddress\u0026gt; \u0026lt;dniNumber\u0026gt;123456789\u0026lt;/dniNumber\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;isTest\u0026gt;true\u0026lt;/isTest\u0026gt; \u0026lt;transactions\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;id\u0026gt;5fde3c2c-540d-4579-96f7-2a4b8c65a951\u0026lt;/id\u0026gt; \u0026lt;creditCard\u0026gt; \u0026lt;maskedNumber\u0026gt;547130******0003\u0026lt;/maskedNumber\u0026gt; \u0026lt;name\u0026gt;APPROVED\u0026lt;/name\u0026gt; \u0026lt;/creditCard\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;MASTERCARD\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;CO\u0026lt;/paymentCountry\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;trazabilityCode\u0026gt;00000000\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;00000000\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;operationDate\u0026gt;2021-05-03T12:59:52\u0026lt;/operationDate\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;deviceSessionId\u0026gt;vghs6tvkcle931686k1900o6e1\u0026lt;/deviceSessionId\u0026gt; \u0026lt;ipAddress\u0026gt;127.0.0.1\u0026lt;/ipAddress\u0026gt; \u0026lt;cookie\u0026gt;pt1t38347bs6jc9ruv2ecpv7o2\u0026lt;/cookie\u0026gt; \u0026lt;userAgent\u0026gt;Mozilla/5.0 (Windows NT 5.1; rv:18.0) Gecko/20100101 Firefox/18.0\u0026lt;/userAgent\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;1\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;First name and second payer name\u0026lt;/fullName\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;calle 93\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;125544\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;Bogota\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;Bogota DC\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CO\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;000000\u0026lt;/postalCode\u0026gt; \u0026lt;phone\u0026gt;7563126\u0026lt;/phone\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;emailAddress\u0026gt;payer_test@test.com\u0026lt;/emailAddress\u0026gt; \u0026lt;contactPhone\u0026gt;7563126\u0026lt;/contactPhone\u0026gt; \u0026lt;dniNumber\u0026gt;5415668464654\u0026lt;/dniNumber\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;termsAndConditionId\u0026gt;202\u0026lt;/termsAndConditionId\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_TOTAL_AMOUNT\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_INTEREST_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_NETWORK_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;CURRENT_TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_PRICING_VALUES\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PURCHASE_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MIN_SHIPPING_PAYER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;BANK_REFERENCED_CODE\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;CREDIT\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PRICING_PROFILE_GROUP_ID\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;MG-PRICING_2_341559\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MAX_SHIPPING_MERCHANT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PERCENT_SHIPPING_MERCHANT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MAX_SHIPPING_PAYER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MERCHANT_PROFILE_ID\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;MG-PRICING_1_51803\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MIN_SHIPPING_MERCHANT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PAYMENT_WAY_ID\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;4\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;/transactions\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_INTEREST_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_NETWORK_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_PRICING_VALUES\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PURCHASE_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;50000.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;creationDate\u0026gt;2021-05-03T13:01:13\u0026lt;/creationDate\u0026gt; \u0026lt;merchantId\u0026gt;508029\u0026lt;/merchantId\u0026gt; \u0026lt;processedTransactionId\u0026gt;5fde3c2c-540d-4579-96f7-2a4b8c65a951\u0026lt;/processedTransactionId\u0026gt; \u0026lt;orderSignature\u0026gt;49f80210a72e9b7cafe9001338450bbb\u0026lt;/orderSignature\u0026gt; \u0026lt;/payload\u0026gt; \u0026lt;/result\u0026gt; \u0026lt;/reportingResponse\u0026gt;    Query by Transaction Id Transaction Id is a value generated by PayU to identify one transaction generated for an order. You can use the TRANSACTION_RESPONSE_DETAIL command to consult the information of a given transaction.\nThe following are the request and response examples for this operation.\n JSON XML   Request example:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;TRANSACTION_RESPONSE_DETAIL\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; }, \u0026#34;details\u0026#34;: { \u0026#34;transactionId\u0026#34;: \u0026#34;546e0fe9-8076-46b5-9f73-622c5a12f5cb\u0026#34; } } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;result\u0026#34;: { \u0026#34;payload\u0026#34;: { \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: \u0026#34;000\u0026#34;, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;77821\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;170921\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: \u0026#34;Aprobado y completado con exito\u0026#34;, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1620069958670, \u0026#34;extraParameters\u0026#34;: null } } }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;TRANSACTION_RESPONSE_DETAIL\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;details class=\u0026#34;java.util.HashMap\u0026#34;\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;transactionId\u0026lt;/string\u0026gt; \u0026lt;object class=\u0026#34;java.lang.String\u0026#34;\u0026gt;546e0fe9-8076-46b5-9f73-622c5a12f5cb\u0026lt;/object\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/details\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;reportingResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;result\u0026gt; \u0026lt;payload class=\u0026#34;transactionResponse\u0026#34;\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;paymentNetworkResponseCode\u0026gt;000\u0026lt;/paymentNetworkResponseCode\u0026gt; \u0026lt;trazabilityCode\u0026gt;77821\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;170921\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;responseMessage\u0026gt;Aprobado y completado con exito\u0026lt;/responseMessage\u0026gt; \u0026lt;operationDate\u0026gt;2021-05-03T14:25:58\u0026lt;/operationDate\u0026gt; \u0026lt;/payload\u0026gt; \u0026lt;/result\u0026gt; \u0026lt;/reportingResponse\u0026gt;    Query by Reference Id Reference Id is a value generated by your commerce to identify an order. You can use the ORDER_DETAIL_BY_REFERENCE_CODE to consult the status of an Order by your own order identifier (reference). The following are the request and response examples for this method.\n JSON XML   Request example:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;ORDER_DETAIL_BY_REFERENCE_CODE\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; }, \u0026#34;details\u0026#34;: { \u0026#34;referenceCode\u0026#34;: \u0026#34;HP14015317573744\u0026#34; } } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;result\u0026#34;: { \u0026#34;payload\u0026#34;: [ { \u0026#34;id\u0026#34;: 844427581, \u0026#34;accountId\u0026#34;: 512321, \u0026#34;status\u0026#34;: \u0026#34;CAPTURED\u0026#34;, \u0026#34;referenceCode\u0026#34;: \u0026#34;HP14015317573744\u0026#34;, \u0026#34;description\u0026#34;: \u0026#34;9518567a-0da7-44f9-b4d5-f8b8ac8d96d4\u0026#34;, \u0026#34;airlineCode\u0026#34;: null, \u0026#34;language\u0026#34;: \u0026#34;pt\u0026#34;, \u0026#34;notifyUrl\u0026#34;: \u0026#34;http://api-pay-aff.vulcano.rocks/hotpay-notification-server/api/v1/payu/notification\u0026#34;, \u0026#34;shippingAddress\u0026#34;: null, \u0026#34;buyer\u0026#34;: { \u0026#34;merchantBuyerId\u0026#34;: \u0026#34;0c970b19-3fbf-362c-b64b-c2c6ece8d01a\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;emailAddress\u0026#34;: \u0026#34;e26a8f06-64ef-49aa-8897-29df2f664017@usetheforce.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: null, \u0026#34;buyerAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;ae QOprITzE\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;448\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;BH\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;MG\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;27519777\u0026#34;, \u0026#34;phone\u0026#34;: null }, \u0026#34;dniNumber\u0026#34;: \u0026#34;1111\u0026#34;, \u0026#34;cnpj\u0026#34;: \u0026#34;61609024311\u0026#34; }, \u0026#34;antifraudMerchantId\u0026#34;: null, \u0026#34;isTest\u0026#34;: true, \u0026#34;transactions\u0026#34;: [ { \u0026#34;id\u0026#34;: \u0026#34;76b724ee-f8e3-4228-84ca-d9e0a9d5d2b7\u0026#34;, \u0026#34;order\u0026#34;: null, \u0026#34;creditCard\u0026#34;: { \u0026#34;maskedNumber\u0026#34;: \u0026#34;411111******1111\u0026#34;, \u0026#34;issuerBank\u0026#34;: \u0026#34;THE CHASE MANHATTAN BANK\u0026#34;, \u0026#34;name\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;cardType\u0026#34;: null }, \u0026#34;bankAccount\u0026#34;: null, \u0026#34;type\u0026#34;: \u0026#34;AUTHORIZATION_AND_CAPTURE\u0026#34;, \u0026#34;parentTransactionId\u0026#34;: null, \u0026#34;paymentMethod\u0026#34;: \u0026#34;VISA\u0026#34;, \u0026#34;source\u0026#34;: null, \u0026#34;paymentCountry\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;transactionResponse\u0026#34;: { \u0026#34;state\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;paymentNetworkResponseCode\u0026#34;: null, \u0026#34;paymentNetworkResponseErrorMessage\u0026#34;: null, \u0026#34;trazabilityCode\u0026#34;: \u0026#34;00000000\u0026#34;, \u0026#34;authorizationCode\u0026#34;: \u0026#34;00000000\u0026#34;, \u0026#34;pendingReason\u0026#34;: null, \u0026#34;responseCode\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;errorCode\u0026#34;: null, \u0026#34;responseMessage\u0026#34;: null, \u0026#34;transactionDate\u0026#34;: null, \u0026#34;transactionTime\u0026#34;: null, \u0026#34;operationDate\u0026#34;: 1531757342757, \u0026#34;extraParameters\u0026#34;: null }, \u0026#34;deviceSessionId\u0026#34;: null, \u0026#34;ipAddress\u0026#34;: \u0026#34;10.100.1.30\u0026#34;, \u0026#34;cookie\u0026#34;: null, \u0026#34;userAgent\u0026#34;: \u0026#34;Apache-HttpClient/4.3.1 (java 1.5)\u0026#34;, \u0026#34;expirationDate\u0026#34;: null, \u0026#34;payer\u0026#34;: { \u0026#34;merchantPayerId\u0026#34;: \u0026#34;c48c9d72c2344173a8a66ad157f1415e@payutest.com\u0026#34;, \u0026#34;fullName\u0026#34;: \u0026#34;APPROVED\u0026#34;, \u0026#34;billingAddress\u0026#34;: { \u0026#34;street1\u0026#34;: \u0026#34;ae QOprITzE\u0026#34;, \u0026#34;street2\u0026#34;: \u0026#34;448\u0026#34;, \u0026#34;city\u0026#34;: \u0026#34;BH\u0026#34;, \u0026#34;state\u0026#34;: \u0026#34;MG\u0026#34;, \u0026#34;country\u0026#34;: \u0026#34;CO\u0026#34;, \u0026#34;postalCode\u0026#34;: \u0026#34;27519777\u0026#34;, \u0026#34;phone\u0026#34;: null }, \u0026#34;emailAddress\u0026#34;: \u0026#34;e26a8f06-64ef-49aa-8897-29df2f664017@usetheforce.com\u0026#34;, \u0026#34;contactPhone\u0026#34;: null, \u0026#34;dniNumber\u0026#34;: \u0026#34;1111\u0026#34;, \u0026#34;dniType\u0026#34;: null }, \u0026#34;termsAndConditionId\u0026#34;: 202, \u0026#34;additionalValues\u0026#34;: { \u0026#34;PM_PAYER_COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;DP_MERCHANT_COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 119.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_TOTAL_AMOUNT\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 8717.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_INTEREST_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_NETWORK_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 45882.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;CURRENT_TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 8717.65, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;DP_MERCHANT_INTEREST_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;DP_MERCHANT_TOTAL_INCOME_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 52921.05, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_PRICING_VALUES\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 45882.35, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PURCHASE_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 45883.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; } }, \u0026#34;extraParameters\u0026#34;: { \u0026#34;MIN_SHIPPING_PAYER\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;PRICING_PROFILE_GROUP_ID\u0026#34;: \u0026#34;MG-PRICING_2_341559\u0026#34;, \u0026#34;MAX_SHIPPING_MERCHANT\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;PERCENT_SHIPPING_MERCHANT\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;MAX_SHIPPING_PAYER\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;MERCHANT_PROFILE_ID\u0026#34;: \u0026#34;MG-PRICING_1_51803\u0026#34;, \u0026#34;MIN_SHIPPING_MERCHANT\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;INSTALLMENTS_NUMBER\u0026#34;: \u0026#34;1\u0026#34; } } ], \u0026#34;additionalValues\u0026#34;: { \u0026#34;PM_PAYER_COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;DP_MERCHANT_COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 119.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;COMMISSION_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 8717.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_INTEREST_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_NETWORK_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 45882.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX\u0026#34;: { \u0026#34;value\u0026#34;: 8717.65, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;DP_MERCHANT_INTEREST_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PAYER_PRICING_VALUES\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;TX_TAX_RETURN_BASE\u0026#34;: { \u0026#34;value\u0026#34;: 45882.35, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_PURCHASE_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 45883.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_ADDITIONAL_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 0.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; }, \u0026#34;PM_VALUE\u0026#34;: { \u0026#34;value\u0026#34;: 54600.00, \u0026#34;currency\u0026#34;: \u0026#34;COP\u0026#34; } }, \u0026#34;creationDate\u0026#34;: 1531757337149, \u0026#34;isCreatedUsingStandardIntegrationParams\u0026#34;: null, \u0026#34;merchantId\u0026#34;: 508029, \u0026#34;processedTransactionId\u0026#34;: \u0026#34;76b724ee-f8e3-4228-84ca-d9e0a9d5d2b7\u0026#34;, \u0026#34;orderSignature\u0026#34;: \u0026#34;bbd718c869298251a91329b673c5abfa\u0026#34; } ] } }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;ORDER_DETAIL_BY_REFERENCE_CODE\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;details class=\u0026#34;java.util.HashMap\u0026#34;\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;referenceCode\u0026lt;/string\u0026gt; \u0026lt;object class=\u0026#34;java.lang.String\u0026#34;\u0026gt;HP14015317573744\u0026lt;/object\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/details\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;reportingResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;result\u0026gt; \u0026lt;payload class=\u0026#34;list\u0026#34;\u0026gt; \u0026lt;order\u0026gt; \u0026lt;id\u0026gt;844427581\u0026lt;/id\u0026gt; \u0026lt;accountId\u0026gt;512321\u0026lt;/accountId\u0026gt; \u0026lt;status\u0026gt;CAPTURED\u0026lt;/status\u0026gt; \u0026lt;referenceCode\u0026gt;HP14015317573744\u0026lt;/referenceCode\u0026gt; \u0026lt;description\u0026gt;9518567a-0da7-44f9-b4d5-f8b8ac8d96d4\u0026lt;/description\u0026gt; \u0026lt;language\u0026gt;pt\u0026lt;/language\u0026gt; \u0026lt;notifyUrl\u0026gt;http://api-pay-aff.vulcano.rocks/hotpay-notification-server/api/v1/payu/notification\u0026lt;/notifyUrl\u0026gt; \u0026lt;buyer\u0026gt; \u0026lt;merchantBuyerId\u0026gt;0c970b19-3fbf-362c-b64b-c2c6ece8d01a\u0026lt;/merchantBuyerId\u0026gt; \u0026lt;fullName\u0026gt;APPROVED\u0026lt;/fullName\u0026gt; \u0026lt;emailAddress\u0026gt;e26a8f06-64ef-49aa-8897-29df2f664017@usetheforce.com\u0026lt;/emailAddress\u0026gt; \u0026lt;buyerAddress\u0026gt; \u0026lt;street1\u0026gt;ae QOprITzE\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;448\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;BH\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;MG\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CO\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;27519777\u0026lt;/postalCode\u0026gt; \u0026lt;/buyerAddress\u0026gt; \u0026lt;dniNumber\u0026gt;1111\u0026lt;/dniNumber\u0026gt; \u0026lt;CNPJ\u0026gt;61609024311\u0026lt;/CNPJ\u0026gt; \u0026lt;/buyer\u0026gt; \u0026lt;isTest\u0026gt;true\u0026lt;/isTest\u0026gt; \u0026lt;transactions\u0026gt; \u0026lt;transaction\u0026gt; \u0026lt;id\u0026gt;76b724ee-f8e3-4228-84ca-d9e0a9d5d2b7\u0026lt;/id\u0026gt; \u0026lt;creditCard\u0026gt; \u0026lt;maskedNumber\u0026gt;411111******1111\u0026lt;/maskedNumber\u0026gt; \u0026lt;issuerBank\u0026gt;THE CHASE MANHATTAN BANK\u0026lt;/issuerBank\u0026gt; \u0026lt;name\u0026gt;APPROVED\u0026lt;/name\u0026gt; \u0026lt;/creditCard\u0026gt; \u0026lt;type\u0026gt;AUTHORIZATION_AND_CAPTURE\u0026lt;/type\u0026gt; \u0026lt;paymentMethod\u0026gt;VISA\u0026lt;/paymentMethod\u0026gt; \u0026lt;paymentCountry\u0026gt;CO\u0026lt;/paymentCountry\u0026gt; \u0026lt;transactionResponse\u0026gt; \u0026lt;state\u0026gt;APPROVED\u0026lt;/state\u0026gt; \u0026lt;trazabilityCode\u0026gt;00000000\u0026lt;/trazabilityCode\u0026gt; \u0026lt;authorizationCode\u0026gt;00000000\u0026lt;/authorizationCode\u0026gt; \u0026lt;responseCode\u0026gt;APPROVED\u0026lt;/responseCode\u0026gt; \u0026lt;operationDate\u0026gt;2018-07-16T11:09:02\u0026lt;/operationDate\u0026gt; \u0026lt;/transactionResponse\u0026gt; \u0026lt;ipAddress\u0026gt;10.100.1.30\u0026lt;/ipAddress\u0026gt; \u0026lt;userAgent\u0026gt;Apache-HttpClient/4.3.1 (java 1.5)\u0026lt;/userAgent\u0026gt; \u0026lt;payer\u0026gt; \u0026lt;merchantPayerId\u0026gt;c48c9d72c2344173a8a66ad157f1415e@payutest.com\u0026lt;/merchantPayerId\u0026gt; \u0026lt;fullName\u0026gt;APPROVED\u0026lt;/fullName\u0026gt; \u0026lt;billingAddress\u0026gt; \u0026lt;street1\u0026gt;ae QOprITzE\u0026lt;/street1\u0026gt; \u0026lt;street2\u0026gt;448\u0026lt;/street2\u0026gt; \u0026lt;city\u0026gt;BH\u0026lt;/city\u0026gt; \u0026lt;state\u0026gt;MG\u0026lt;/state\u0026gt; \u0026lt;country\u0026gt;CO\u0026lt;/country\u0026gt; \u0026lt;postalCode\u0026gt;27519777\u0026lt;/postalCode\u0026gt; \u0026lt;/billingAddress\u0026gt; \u0026lt;emailAddress\u0026gt;e26a8f06-64ef-49aa-8897-29df2f664017@usetheforce.com\u0026lt;/emailAddress\u0026gt; \u0026lt;dniNumber\u0026gt;1111\u0026lt;/dniNumber\u0026gt; \u0026lt;/payer\u0026gt; \u0026lt;termsAndConditionId\u0026gt;202\u0026lt;/termsAndConditionId\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;DP_MERCHANT_COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;119.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_TOTAL_AMOUNT\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;8717.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_INTEREST_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_NETWORK_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;45882.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;CURRENT_TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;8717.65\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;DP_MERCHANT_INTEREST_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;DP_MERCHANT_TOTAL_INCOME_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;52921.05\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_PRICING_VALUES\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;45882.35\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PURCHASE_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;45883.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;extraParameters\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MIN_SHIPPING_PAYER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PRICING_PROFILE_GROUP_ID\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;MG-PRICING_2_341559\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MAX_SHIPPING_MERCHANT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PERCENT_SHIPPING_MERCHANT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MAX_SHIPPING_PAYER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MERCHANT_PROFILE_ID\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;MG-PRICING_1_51803\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;MIN_SHIPPING_MERCHANT\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;0\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;INSTALLMENTS_NUMBER\u0026lt;/string\u0026gt; \u0026lt;string\u0026gt;1\u0026lt;/string\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/extraParameters\u0026gt; \u0026lt;/transaction\u0026gt; \u0026lt;/transactions\u0026gt; \u0026lt;additionalValues\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;DP_MERCHANT_COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;119.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;COMMISSION_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;8717.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_INTEREST_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_NETWORK_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;45882.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;8717.65\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;DP_MERCHANT_INTEREST_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PAYER_PRICING_VALUES\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;TX_TAX_RETURN_BASE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;45882.35\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_PURCHASE_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;45883.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_ADDITIONAL_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;0.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;entry\u0026gt; \u0026lt;string\u0026gt;PM_VALUE\u0026lt;/string\u0026gt; \u0026lt;additionalValue\u0026gt; \u0026lt;value\u0026gt;54600.00\u0026lt;/value\u0026gt; \u0026lt;currency\u0026gt;COP\u0026lt;/currency\u0026gt; \u0026lt;/additionalValue\u0026gt; \u0026lt;/entry\u0026gt; \u0026lt;/additionalValues\u0026gt; \u0026lt;creationDate\u0026gt;2018-07-16T11:08:57\u0026lt;/creationDate\u0026gt; \u0026lt;merchantId\u0026gt;508029\u0026lt;/merchantId\u0026gt; \u0026lt;processedTransactionId\u0026gt;76b724ee-f8e3-4228-84ca-d9e0a9d5d2b7\u0026lt;/processedTransactionId\u0026gt; \u0026lt;orderSignature\u0026gt;bbd718c869298251a91329b673c5abfa\u0026lt;/orderSignature\u0026gt; \u0026lt;/order\u0026gt; \u0026lt;/payload\u0026gt; \u0026lt;/result\u0026gt; \u0026lt;/reportingResponse\u0026gt;    Ping The PING method lets you verify the connection to our platform. The following are the request and response examples for this method.\n JSON XML   Request example:\n{ \u0026#34;test\u0026#34;: false, \u0026#34;language\u0026#34;: \u0026#34;en\u0026#34;, \u0026#34;command\u0026#34;: \u0026#34;PING\u0026#34;, \u0026#34;merchant\u0026#34;: { \u0026#34;apiLogin\u0026#34;: \u0026#34;pRRXKOl8ikMmt9u\u0026#34;, \u0026#34;apiKey\u0026#34;: \u0026#34;4Vj8eK4rloUd272L48hsrarnUA\u0026#34; } } \nResponse example:\n{ \u0026#34;code\u0026#34;: \u0026#34;SUCCESS\u0026#34;, \u0026#34;error\u0026#34;: null, \u0026#34;result\u0026#34;: { \u0026#34;payload\u0026#34;: \u0026#34;ping\u0026#34; } }   Request example:\n\u0026lt;request\u0026gt; \u0026lt;language\u0026gt;en\u0026lt;/language\u0026gt; \u0026lt;command\u0026gt;PING\u0026lt;/command\u0026gt; \u0026lt;merchant\u0026gt; \u0026lt;apiLogin\u0026gt;pRRXKOl8ikMmt9u\u0026lt;/apiLogin\u0026gt; \u0026lt;apiKey\u0026gt;4Vj8eK4rloUd272L48hsrarnUA\u0026lt;/apiKey\u0026gt; \u0026lt;/merchant\u0026gt; \u0026lt;isTest\u0026gt;false\u0026lt;/isTest\u0026gt; \u0026lt;/request\u0026gt; \nResponse example:\n\u0026lt;reportingResponse\u0026gt; \u0026lt;code\u0026gt;SUCCESS\u0026lt;/code\u0026gt; \u0026lt;result\u0026gt; \u0026lt;payload class=\u0026#34;string\u0026#34;\u0026gt;ping\u0026lt;/payload\u0026gt; \u0026lt;/result\u0026gt; \u0026lt;/reportingResponse\u0026gt;    ","excerpt":"To integrate with Queries API, target your request to the following URLs according to your â€¦","ref":"/docs/integrations/api-integration/queries-api.html","title":"Queries API"},{"body":"The following section shows the payment methods supported per country and provides some considerations. Refer to the paymentMethod column to know the value to be sent as Payment Method while using API or SDK integrations.\nArgentina      Payment Method paymentMethod Type Comments      American Express AMEX Credit Cards     Argencard ARGENCARD Credit Cards     Cabal CABAL Credit Cards     Cencosud CENCOSUD Credit Cards     Cobro Express COBRO_EXPRESS Cash     Diners DINERS Credit Cards     Mastercard MASTERCARD Credit Cards     Naranja NARANJA Credit Cards     PAGOFACIL PAGOFACIL Cash     RAPIPAGO RAPIPAGO Cash     Shopping SHOPPING Credit Cards     VISA VISA Credit Cards     VISA VISA_DEBIT Debit Cards     Brazil      Payment Method paymentMethod Type Comments      American Express AMEX Credit Cards     Boleto Bancario BOLETO_BANCARIO Cash Does not conciliate at weekends or holidays    Diners DINERS Credit Cards     Elo ELO Credit Cards     Hipercard HIPERCARD Credit Cards     Mastercard MASTERCARD Credit Cards     VISA VISA Credit Cards     Chile      Payment Method paymentMethod Type Comments      American Express AMEX Credit Cards     Diners DINERS Credit Cards     Mastercard MASTERCARD Credit Cards     Mastercard MASTERCARD_DEBIT Debit Cards     Klap (FKA Multicaja) MULTICAJA Cash     Redcompra TRANSBANK_DEBIT Bank Transfer     VISA VISA Credit Cards     VISA VISA_DEBIT Debit Cards     Colombia      Payment Method paymentMethod Type Comments      American Express AMEX Credit Cards     Baloto BALOTO Cash     Banco de BogotÃ¡ BANK_REFERENCED Bank Reference     Bancolombia BANK_REFERENCED Bank Reference     Codensa CODENSA Credit Cards     Davivienda BANK_REFERENCED Bank Reference     Diners DINERS Credit Cards     Efecty EFECTY Cash     Mastercard MASTERCARD Credit Cards     PSE PSE Bank Transfer     Su Red OTHER_CASH Cash Payment offices: PagaTodo,\nGana Gana, Gana, Acertemos,\nApuestas CÃºcuta 75,\nSu Chance, La Perla, Apuestas\nUnidas, JER.    VISA VISA Credit Cards     Mexico      Payment Method paymentMethod Type Comments      American Express AMEX Credit Cards     BBVA Bancomer BANK_REFERENCED Bank Reference     Farmacias Benavides OTHERS_CASH_MX Cash     Farmacias del Ahorro OTHERS_CASH_MX Cash     Mastercard MASTERCARD Credit Cards     Mastercard MASTERCARD_DEBIT Debit Cards     Oxxo OXXO Cash     Seven Eleven SEVEN_ELEVEN Cash     SPEI SPEI Bank Transfer     VISA VISA Credit Cards     VISA VISA_DEBIT Debit Cards     Panama      Payment Method paymentMethod Type Comments      Mastercard MASTERCARD Credit Cards     VISA VISA Credit Cards     Peru      Payment Method paymentMethod Type Comments      American Express AMEX Credit Cards     Diners DINERS Credit Cards     Mastercard MASTERCARD Credit Cards     Mastercard MASTERCARD_DEBIT Debit Cards     PAGOEFECTIVO PAGOEFECTIVO Cash     VISA VISA Credit Cards     VISA VISA_DEBIT Debit Cards     ","excerpt":"The following section shows the payment methods supported per country and provides some â€¦","ref":"/docs/getting-started/select-your-payment-method.html","title":"Select Your Payment Method"},{"body":"Pre-integrated solutions Some online stores are already integrated with PayU. You just need to activate the PayU option as your payment platform.\nAvailable solutions:\n        Note Some of the links above may appear in Spanish.  Plugins for modules If you use an open source shopping cart, download and use the plugins we developed to ease your integration process with its payment system.\nAvailable plugins:\n        Plugin files Find the latest version of the plugin in the following table\n   Shopping cart Plugin Considerations      Download Available for versions from 1.7.x to 1.9.x.    Download You need Drupal Commerce Kickstart 7.xx    VirtueMart v2+\nDownloadVirtueMart v3.0.6\nDownload You need Joomla 2.5 with MySQL 5.1 or higher.You need Joomla versions 3.3.6, 2.5.28, or 2.5.27.    Download You need:\nWordPress 3.8 or higher.WooCommerce version 2.0 or higher installed on the WordPress site.    Download Available for version 2.3.    Version 1.5.5.1 or 1.5.6.4\nDownloadVersion 2.0.x.x to 2.1.x.x\nDownload     ","excerpt":"Pre-integrated solutions Some online stores are already integrated with PayU. You just need to â€¦","ref":"/docs/tools/shopping-cart-plugins.html","title":"Shopping Cart Plugins"},{"body":"","excerpt":"","ref":"/docs/tools.html","title":"Tools"},{"body":"To use the tokenization feature, you need to enable it in your PayU account. To do so, contact your sales representative:\n  comercios.ar@payu.com comercios.br@payu.com comercios.cl@payu.com    comercios.co@payu.com comercios.mx@payu.com comercios.pe@payu.com    How does Tokenization work? Tokenization includes two separated processes:\nGenerate token The first process lets you save the information of a credit card. This information is transformed into a token to let you use it later.\nMake charges After you have the information of a credit card stored in a token, you can use it to perform charges periodically according to your need and your customer does not have to provide the information of their credit cards whenever you require a payment.\nFurthermore, the tokenization feature lets you store, remove or charge several credit carts by sending an file coded in Base64.\nWhat\u0026rsquo;s next? The integration with this feature can be performed using one of our integration types:\n For API integrations, refer to this topic For SDK integrations, refer to this topic  ","excerpt":"To use the tokenization feature, you need to enable it in your PayU account. To do so, contact your â€¦","ref":"/docs/services/tokenization.html","title":"Tokenization"},{"body":"Similar to any API integration, you can customize your checkout according to your shop\u0026rsquo;s needs and the customer stays on your site during the purchase and payment process.\n","excerpt":"Similar to any API integration, you can customize your checkout according to your shop\u0026rsquo;s needs â€¦","ref":"/docs/integrations/sdk-integration.html","title":"SDK Integration"},{"body":"Prerequisites  You need an active account in PayU Latam. For VirtueMart version 2 or higher:  Having the PayU\u0026rsquo;s VirtueMart plugin downloaded and stored in an accessible location. Click here to download it. Having VirtueMart version 2 or higher installed. Your VirtueMart website must be installed on Joomla!Â® 2.5 or higher with MySQL 5.1 or higher.   For VirtueMart version 3.0.6:  Having the PayU\u0026rsquo;s VirtueMart plugin downloaded and stored in an accessible location. Click here to download it. Having VirtueMart version 3.0.6 installed. Your VirtueMart website must be installed on Joomla!Â® versions 3.3.6, 2.5.28 or 2.5.27.    Plugin for VirtueMart 2 or higher Follow the next procedure to install and configure the plugin on your website.\nInstallation  Open the Joomla!Â® Administrator Console and select the Extension Manager option located in the Extension menu.  In the Upload Package File section, click Browse and locate the .zip file of the PayU plugin downloaded.  Once the installation procedure completes, a message appears to inform that the installation was successful.  Configuration  Expand the option Shop in the VirtueMart menu and select Payment methods. Then, click New at the top right of the screen.  In the Payment Method Information tab, set Payulatam as Payment Name and select PayuLatam in the Payment Method field.  Go to the Configuration tab and provide the information of your account and your merchant key.  Furthermore, provide the connection URL to the gateway and the configuration variables explained in the Configuration variables section.\nThe URLs for test and production environments are:\n Test: https://sandbox.gateway.payulatam.com/ppp-web-gateway Production: https://gateway.payulatam.com/ppp-web-gateway/  Finally, click Save or Save \u0026amp; Close button. At this point, your customers can pay with PayU Latam using the VirtueMart shopping cart.  Plugin for VirtueMart 3.0.6 Follow the next procedure to install and configure the plugin on your website.\nInstallation  Open the Joomla!Â® Administrator Console and select the option Extension Manager inside the Extensions menu.  In the Extension package file field, choose the previously downloaded .zip file.  Once the .zip file is loaded, click Upload \u0026amp; Install.  Once the installation procedure completes, a message appears to inform that the installation was successful.  Configuration  In the left menu, click Manage. Find and enable the PayuLatam plugin.  A message appears informing that you have enabled the plugin. Furthermore, the icon changes to a check mark.\nOpen the Components menu and expand the Virtuemart option. Then, select Payment Methods.  In the opened window, click New to create a payment method using the PayuLatam plugin.  In the Payment Method Information tab, set Payulatam as Payment Name and select PayuLatam in the Payment Method field.  Go to the Configuration tab and provide the information of your account and your merchant key.  Furthermore, provide the connection URL to the gateway and the configuration variables explained in the Configuration variables section.\nThe URLs for test and production environments are:\n Test: https://sandbox.gateway.payulatam.com/ppp-web-gateway Production: https://gateway.payulatam.com/ppp-web-gateway/  Finally, click Save or Save \u0026amp; Close button. At this point, your customers can pay with PayU Latam using the VirtueMart shopping cart.  Configuration variables Regardless of the VirtueMart version you use, set ands configure the following variables in your plugin:\n   Field Value     Logo Logo displayed for the PayuLatam payment method.   Test URL Gateway URL for test: https://sandbox.gateway.payulatam.com/ppp-web-gateway.   Production URL Gateway URL for production: https://gateway.payulatam.com/ppp-web-gateway.   Test Mode Select Yes if you want to make transactions in the test environment. When you enable this option, VirtueMart uses the URL configured in the Test URL variable   Merchant ID ID of your commerce in PayU Latam.   Account ID ID of the PayU account according to the country where you want to sell.   API Key Unique key of your commerce, you can find this key in the PayU module.   Section ORDER STATUS PARAMS\nApproved TransactionsPending TransactionsDeclined Transactions Defines the order state in VirtueMart according to the transaction state returned by PayU. We suggest to keep the default states; nevertheless, you can configure them according to your business needs.   Currency Set USD. Also, you can configure the currency of the Account ID country.   Minimum Value / Maximum value The total value of an order must be within this range in order to activate the PayuLatam payment method.   Tax To use this option, configure the corresponding Virtuemart rule to the associated tax. For example, IVA for Colombia.    ","excerpt":"Prerequisites  You need an active account in PayU Latam. For VirtueMart version 2 or higher:  Having â€¦","ref":"/docs/tools/shopping-cart-plugins/virtuemart.html","title":"VirtueMart"},{"body":"Implement PayU with the aggregator model or gateway, using PayUâ€™s financial agreements or your own. Select the integration that fits best with your needs:\nCheckout integration PayU Checkout is an integration that allows you to collect through a PayU web form from any device in a simple, fast and secure way.  PayU manages the payment system Easier integration, equally secure Since PayU manages the payment platform, it is easier to get PCI DSS certification  Learn more about WebCheckout integration  API or SDK integration Through API or SDK integrations, you can receive payments securely from anywhere you like, on your website or mobile app.  Design your checkout and manage the payment system of your website. Access to additional services such as Tokenization or Recurring payments  Learn more about API integration Learn more about SDK integration     How to get variables for integration. Regardless of the integration selected, you may require any of the following variables in the request of the methods.\nAPI key and API Login   Log in to PayU.com and click the login option located at the top of the page. Alternatively, you can log in to https://merchants.payulatam.com/.\n  Click Settings and then select Technical configuration.\n  In this window, you find both the API key and API Login which allows you to authenticate you commerce during the integration procedure.  Warning Both keys are unique per commerce in PayU, therefore, you must keep this information secured and their usage or disclosure is under your responsibility.  Authentication signature The variable signature is used to validate the payments performed through the platform, ensuring their authenticity. This variable is a string value encrypted using MD5 or SHA algorithms and follows this structure.\nApiKey~merchantId~referenceCode~tx_value~currency Let\u0026rsquo;s build a signature using the following test values:\n ApiKey: 4Vj8eK4rloUd272L48hsrarnUA merchantId: 508029 referenceCode: TestPayU tx_value: 3 currency: USD  The string is these values concatenated with the tilde character (~):\n4Vj8eK4rloUd272L48hsrarnUA~508029~TestPayU~3~USD After you apply the MD5 algorithm, the signature value is:\nba9ffa71559580175585e45ce70b6c37 deviceSessionId variable The deviceSessionId is a code with the information of the device where the transaction was generated and provides a unique identifier for the device. This variable lets us identify attackers.\n To perform either API or SDK integration, you need to include the following script in your payment form:  \u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://maf.pagosonline.net/ws/fp/tags.js?id=${deviceSessionId}80200\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;noscript\u0026gt; \u0026lt;iframe style=\u0026#34;width: 100px; height: 100px; border: 0; position: absolute; top: -5000px;\u0026#34; src=\u0026#34;https://maf.pagosonline.net/ws/fp/tags.js?id=${deviceSessionId}80200\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/noscript\u0026gt; \nIt is important to generate the deviceSessionId per each transaction. To generate the deviceSessionId get the session_id of the cookie and concatenate it with the current timestamp along with the milliseconds. Then, encrypt the result using MD5.  Example in PHP\n$deviceSessionId = md5(session_id().microtime()) \nFor example, if the $deviceSessionId is d66f949f19b33e88c202b579cfc549b3, the script is as follows:\n\u0026lt;script type=\u0026#34;text/javascript\u0026#34; src=\u0026#34;https://maf.pagosonline.net/ws/fp/tags.js?id=d66f949f19b33e88c202b579cfc549b380200\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;noscript\u0026gt; \u0026lt;iframe style=\u0026#34;width: 100px; height: 100px; border: 0; position: absolute; top: -5000px;\u0026#34; src=\u0026#34;https://maf.pagosonline.net/ws/fp/tags.js?id=d66f949f19b33e88c202b579cfc549b380200\u0026#34;\u0026gt;\u0026lt;/iframe\u0026gt; \u0026lt;/noscript\u0026gt; ","excerpt":"Implement PayU with the aggregator model or gateway, using PayUâ€™s financial agreements or your own. â€¦","ref":"/docs/integrations.html","title":"Integrations"},{"body":"To use the PayU module, go to www.payu.com.\n","excerpt":"To use the PayU module, go to www.payu.com.","ref":"/docs/tools/payu-module.html","title":"PayU Module"},{"body":"If you want to perform tests through PayU, you need to use the following credentials in the request, depending on the country of your account:\n   Merchant ID API Login API Key accountId Country     508029 pRRXKOl8ikMmt9u 4Vj8eK4rloUd272L48hsrarnUA 512322 Argentina   512327 Brazil   512325 Chile   512321 Colombia   512324 Mexico   512326 Panama   512323 Peru    The test environment does not replicate data from your production account.\nTest cards You can use the following cards for testing:\n Argentina    Card Number     AMEX Credit Card 376414000000009   ARGENCARD Credit Card 5011050000000000   CABAL Credit Card 5896570000000000   CENCOSUD Credit Card 6034930000000005 - 5197670000000002   MASTER Credit Card 5399090000000000   NARANJA Credit Card 5895620000000000   VISA Credit Card 4850110000000000 - 4036820000000001   VISA Debit Card 4517730000000000      Brazil    Card Number     AMEX Credit Card 376611000000000   DINERS Credit Card 36213800000009   ELO Credit Card 5067310000000002   HIPERCARD Credit Card 6062820000000003   MASTER Credit Card 5123740000000002   VISA Credit Card 4422120000000008 - 4984460000000008      Chile    Card Number     VISA Credit Card 4938590000000010   MASTER Credit Card 5435630000000000   AMEX Credit Card 377825000000005   DINERS Credit Card 36525200000002      Colombia    Card Number     AMEX Credit Card 377813000000001   DINERS Credit Card 36032400000007   CODENSA Credit Card 5907121111111110   CRM Credit Card 6271800000000000   MASTER Credit Card 5471300000000000   MASTER Credit Card2 2221000000000000   VISA Credit Card 4097440000000000   VISA Debit Card 4509420000000000      Mexico    Card Number     AMEX Credit Card 376675000000005   MASTER Credit Card 5579070000000000   MASTER Debit Card 5256780000000000   VISA Credit Card 4268070000000000   VISA Debit Card 4415490000000000      Panama    Card Number     MASTER Credit Card 5455040000000005   VISA Credit Card 4723030000000005      Peru    Card Number     AMEX Credit Card 377753000000009   DINERS Credit Card 36239200000000   MASTER Credit Card 5491610000000000   MASTER Debit Card 5236930000000000   VISA Credit Card 4907840000000005 - 4634010000000005   VISA Debit Card 4557880000000000     Importing the Collection Click the button below to import our collection in Postman (you may need to refresh the page if the button does not work for you. Note that we create a new environment each time you import the collection.\n (function (p,o,s,t,m,a,n) { !p[s] \u0026\u0026 (p[s] = function () { (p[t] || (p[t] = [])).push(arguments); }); !o.getElementById(s+t) \u0026\u0026 o.getElementsByTagName(\"head\")[0].appendChild(( (n = o.createElement(\"script\")), (n.id = s+t), (n.async = 1), (n.src = m), n )); }(window, document, \"_pm\", \"PostmanRunObject\", \"https://run.pstmn.io/button.js\"));  After you run the collection, you need to set the environment variables and the globals.\nSetting your Environment Variables Our collection has one environment named PayU API Sandbox. We recommend you invoke the collectionâ€™s API requests in a Sandbox environment only.\nIf you want to change the PayU\u0026rsquo;s testing accounts, configure the api_key, api_login, merchant_id and account-[country] variables. You can leave all the other variables unchanged.\nImporting globals Globals are the variables required to process transactions in our Payment gateway such as currency, transaction amount, confirmation and response pages and more.\nImport the globals for the collection to configure the values sent to the requests.\n  Download the globals file here.\n  In the Postman collection, click Import next to your workspace name and locate the json file recently downloaded.\n  When finish, click Import.\n  To change the amount of a transaction, update the value for the tx_value_[Country] according to the country you want to test.\nRunning the Requests in the Correct Order Beware that the order in which you run the requests is important, since some of the data returned by one request may be used in the next.\n","excerpt":"If you want to perform tests through PayU, you need to use the following credentials in the request, â€¦","ref":"/docs/getting-started/test-your-solution.html","title":"Test Your Solution"},{"body":"WooCommerce is a Wordpress plugin that ease the creation of an integrated online store. To let your clients pay with PayU from your website, you need to install the plugin for WooCommerce, which integrates PayU Latam as a valid payment gateway. For more information about WooCommerce, refer to their official website.\nPrerequisites  You need an active account in PayU Latam. Having installed WordPress 3.8 or higher. Having installed WooCommerce 2.0 or higher in the Wordpress website. Having the PayU\u0026rsquo;s WooCommerce plugin downloaded and stored in an accessible location. Click here to download it.  Installation Follow the next procedure to install the plugin on your website.\n  Log in to your WordPress site as an administrator.\n  In the Dashboard, expand the Plugins menu in the left panel and click Add New.\n  Go to the Upload option and choose the .zip file of the WooCommerce plugin downloaded.\nThen, click Install Now.  Provide the data of the connection via FTP and click Proceed.  Note This step depends on the initial configuration of WordPress. The installation of the plugin is not affected if you don\u0026rsquo;t see this screen.  Finally, activate the plugin you have installed by clicking the Activate Plugin link.  Configuration  Back in the Dashboard, expand the WooCommerce menu in the left panel and click Settings.  Go to the Checkout tab.  Scroll down to Payment Gateways table. Then, find PayU Latam and drag and drop to the top of the table.\nClick the radio of the Default column.  Save the changes.\nClick the PayU Latam link at the top of the tab and configure the data of your PayU account.  The following table explains the values:\n   Field Value     Enable / Disable Mark this checkbox to enable the WooCommerce payment gateway.   Title Title displayed for the Payment Method. The default value is PayU Latam.   Merchant ID ID of your commerce in PayU Latam   Account ID ID of the PayU account according to the country where you want to sell.   API key Unique key of your commerce, you can find this key in the PayU module.   Gateway URL Gateway URL.\nFor test, you can use https://sandbox.gateway.payulatam.com/ppp-web-gateway and for production https://gateway.payulatam.com/ppp-web-gateway/   Transaction in test mode Mark this checkbox to make transactions the test mode.   Response page URL of the response page.\nBy default, the URL is http://your.domain.com/wp-content/plugins/woocommerce-payu-latam/response.php, you must replace http://your.domain.com with your site\u0026rsquo;s domain.   Confirmation page URL of the confirmation page.\nBy default, the URL is hhttp://your.domain.com/wp-content/plugins/woocommerce-payu-latam/confirmation.php, you must replace http://your.domain.com with your site\u0026rsquo;s domain.    Finally, click Save changes button. At this point, your customers can pay with PayU Latam when they do the checkout in the WooCommerce\u0026rsquo;s shopping cart.  ","excerpt":"WooCommerce is a Wordpress plugin that ease the creation of an integrated online store. To let your â€¦","ref":"/docs/tools/shopping-cart-plugins/woocommerce.html","title":"WooCommerce"},{"body":"","excerpt":"","ref":"/docs/tools/reports.html","title":"Reports"},{"body":"To do this, \u0026hellip;\n","excerpt":"To do this, \u0026hellip;","ref":"/docs/getting-started/deploy-to-production.html","title":"Deploy to Production"},{"body":" ","excerpt":" ","ref":"/docs/server-status.html","title":"Server Status"},{"body":"What are Installments and Promotions With Installments and Promotions, you can offer to your customer the possibility to buy your products paying in a determined number of installments. Regardless of the number of installments selected by your customer, you will receive the full amount of the purchase minus the commission free agreed with PayU.\nTo perform the configuration of Installments and Promotions based on the agreements you have with bank entities, contact your sales representative.\nHow does Promotions and Installments works in PayU To use promotions, you need to first consult the available promotions for your shop; then, select the promotion that fits to your needs and finally, send the payment request along with the promotion Id selected and the number of installments.\nThe following sequence of events explains better the promotions flow.\nAuthentication for Promotions For Promotions, you need to authenticate and authorize the petitions received by your server using a HMAC based mechanism. To authenticate, you need to know your MerchantPublicKey, you can get this information in your PayU Module (Settings \u0026gt; Technical configuration \u0026gt; Public Key).\nConfiguring the authentication You must include in the Authorization in the header, this header follows this structure:\n\u0026#34;Hmac\u0026#34; + \u0026#34; \u0026#34; + MerchantPublicKey + \u0026#34;:\u0026#34; + Signature \nWhere Signature is created as follows:\nSignature = Base64(HMAC-SHA256(MerchantApiKey,ContentToSign)) \nAnd ContentToSign corresponds to:\nHTTP-Verb + \u0026#34;\\n\u0026#34; + \u0026#34;\\n\u0026#34; + \u0026#34;\\n\u0026#34; + Date + \u0026#34;\\n\u0026#34; + URI  Note It is mandatory to include the three line breaks (\\n) after the HTTP-Verb  The following examples shows how to create the Authentication header using the following test values:\nContentToSign:\nGET Fri, 28 Apr 2017 18:32:01 GMT /payments-api/rest/v4.9/pricing \nMerchantApiKey:\n4Vj8eK4rloUd272L48hsrarnUA \nMerchantPublicKey:\nPKaC6H4cEDJD919n705L544kSU \nCrypt the ContentToSign using MerchantApiKey as passphrase. Then, concatenate the result with the MerchantPublicKeyas explained before, the result is as follows:\nAuthorization\nHmac PKaC6H4cEDJD919n705L544kSU:sIxh54sANfKaxO0ugX6QwhPmZRS+TGy8gmdCwr3kjP0= \nTo avoid replay attacks, send the header Date following this format:\nDate\nMon, 11 May 2015 21:14:41 GMT \nDue to some restrictions in REST clients, you can also send the the x-hmac-date header to meet security requirements, this header follows the same format used in Date:\nx-hmac-date\nMon, 11 May 2015 21:14:41 GMT \nWhat\u0026rsquo;s next? The integration with this feature can be performed using one of our integration types:\nNote Promotions API is not included in SDK integration. Nevertheless, we have developed some examples of how to invoke the API using Java or PHP.   For API integrations, refer to this topic For SDK integrations, refer to this topic  Note As this is a RESTful service, we strongly recommend you do not validate the scheme. If the schema is not validated, the integration is not affected, and you only need to perform small changes have to implement the new features when an update is added to the Web Service.  To integrate with Promotions API, target the requests to the following URLs: API  Tests: GET https://sandbox.api.payulatam.com/payments-api/rest/v4.3/pricing Production: GET https://api.payulatam.com/payments-api/rest/v4.3/pricing   -- ","excerpt":"What are Installments and Promotions With Installments and Promotions, you can offer to your â€¦","ref":"/docs/services/promotions.html","title":"Installments and Promotions"},{"body":"osCommerce is a platform developed in PHP that ease the creation of an online store. To let your clients pay with PayU from your website, you need to install the plugin for osCommerce, which integrates PayU Latam as a valid payment gateway. For more information about osCommerce, refer to their official website.\nPrerequisites  You need an active account in PayU Latam. Having installed osCommerce version 2.3. Having the PayU\u0026rsquo;s osCommerce plugin downloaded and stored in an accessible location. Click here to download it.  Installation Follow the next procedure to install the plugin on your website.\n Unzip the plugin file in a location of your choice. From now on, we will refer this location to [PLUGIN_PATH]. In this path, you find the folder oscommerce-plugin-1.0.  Either using FTP or logging in as an Administrator to the server where osCommerce is installed, include the plugin files in the server as follows:   In the server path /[server]/apache/[publication_path]/oscommerce/catalog, copy the plugin files confirmation_payu.php and response_payu.php. These files are located in the path [PLUGIN_PATH]\\oscommerce-plugin-1.0\\oscommerce-payu-latam-1.0\\catalog.    In the server path /[server]/apache/[publication_path]/oscommerce/catalog/includes/languages/english/modules/, copy the plugin file â€˜payu_latam.php located in the path [PLUGIN_PATH]\\oscommerce-plugin-1.0\\oscommerce-payu-latam-1.0\\catalog\\includes\\languages\\english\\modules\\payment.\nRepeat this step for Spanish and English if you have them installed in your osCommerce website. These files are located in the paths:\n ES: [PLUGIN_PATH]\\oscommerce-plugin-1.0\\oscommerce-payu-latam-1.0\\catalog\\includes\\languages\\espanol\\modules\\payment PT: [PLUGIN_PATH]\\oscommerce-plugin-1.0\\oscommerce-payu-latam-1.0\\catalog\\includes\\languages\\portugues\\modules\\payment Note PayU Latam plugin for osCommerce is only available for English, Spanish and Portuguese.      In the server path /[server]/apache/[publication_path]/oscommerce/catalog/includes/modules/payment/, copy the plugin file â€˜payu_latam.php located in the path [PLUGIN_PATH]\\oscommerce-plugin-1.0\\oscommerce-payu-latam-1.0\\catalog\\includes\\modules\\payment. This file is not the same file thn the one mentioned before.\n  In the osCommerce admin panel, expand the Modules menu in the left panel and select Payment option.  In the Payment section, click Install Module button located at the top right corner.  Find the Payu Latam plugin and click it. Then, click Install Module button in the right panel.  After installing the plugin, the list of installed modules of the Payu Latam plugin appears in the right panel.  Configuration  In the Payment section, select the Payu Latam payment method and click the Edit button in the right panel.  The following configuration form appears:  Configure it using the information of your PayU account as follows:\n   Field Value     Enable / Disable Select True to enable the osCommerce payment gateway.   Merchant ID ID of your commerce in PayU Latam   Account ID ID of the PayU account according to the country where you want to sell.   API key Unique key of your commerce, you can find this key in the PayU module.   Gateway URL Gateway URL.\nFor test, you can use https://sandbox.gateway.payulatam.com/ppp-web-gateway and for production https://gateway.payulatam.com/ppp-web-gateway/   Transaction Mode Select Test if you want to process in the Test environment. Otherwise, select Live.   Response page URL of the response page.\nBy default, the URL is http://your.domain.com/yourOscommerceFolder/catalog/response_payu.php, you must replace http://your.domain.com with your site\u0026rsquo;s domain.   Confirmation page URL of the confirmation page.\nBy default, the URL is http://your.domain.com/yourOscommerceFolder/catalog/confirmation_payu.php, you must replace http://your.domain.com with your site\u0026rsquo;s domain.     Save the changes using the button at the bottom of the panel.\n  Finally, go expand the Localization menu and click Order Status. Verify that the order status were created according to the installed languages (English, Spanish, and Portuguese) in your osCommerce website.\n  The valid states are:\n For English: Approved, Rejected, Failed, and Pending. For Spanish: Aprobada, Rechazada, Fallida, and Pendiente. For Portuguese: Aprovado, Recusada, Falha, and Pendente.  Note If you don\u0026rsquo;t have any of the languages mentioned before, the states does not appear in the list. If you want to install a language later, you can create these states manually using the same names displayed above.  At this point, your customers can pay with PayU Latam when they do the checkout in the osCommerce\u0026rsquo;s shopping cart.\n","excerpt":"osCommerce is a platform developed in PHP that ease the creation of an online store. To let your â€¦","ref":"/docs/tools/shopping-cart-plugins/oscommerce.html","title":"osCommerce"},{"body":"What is a Dispute? Your buyers can present a claim to its card issuing bank. The bank sends us a dispute notification, and we create the dispute in our system. This dispute froze the total amount of the sale in your PayU account.\nWhy a dispute happens? A buyer can claim to its card issuer bank reporting that they have not received a product, the product is deficient, or it does not meet the expected characteristics. The buyer also can disclaim the purchase of their credit card invoice.\n","excerpt":"What is a Dispute? Your buyers can present a claim to its card issuing bank. The bank sends us a â€¦","ref":"/docs/tools/disputes.html","title":"Disputes"},{"body":"You can create the refund request using the Refund or Void method. Once you have created the request, a PayU customer service agent validates the information and the justification of the request to approve it and perform the refund, or deny it if it does not meet the requirements. Additionally, you can check the status of your refund request using the Queries service available for that purpose.\nUnderstanding concepts Before moving on, let\u0026rsquo;s explain the following concepts:\n  Void: this operation reverses a previously authorized transaction.\n  Refund: this operation requests the reversal of a previously captured transaction. Refunds can be requested by the total or the partial amount.\n  Void The VOID method cancels a previously authorized transaction. The void of an order can be total or partial depending on if the acquirer supports partial voids.\nVoid is automatic procedure. As soon as you send the VOID request, it does not follow any approval flow, and the transaction is not charged to the card holder.\nNote VOID method is not available in Colombia and Panama.  Refund A refund is requested when a shop decides to voluntarily return the money spent by the shopper due to dissatisfaction reasons or when the shop does not have enough stock of the product purchased. The REFUND method request the reversal of a previously captured transaction.\nUnlike the VOID method, this method requires an approval. The refund procedure is explained below:\n  When a refund is requested by your customer, you need to request it using the PayU module or the API or SDK integration. The request requires the Order Id, and a refund reason.\n  Once you send the request, PayU reviews the request and approves or rejects it in one to three business days.\n  The REFUND has three states:\n UNRESOLVED: the request has been sent to PayU for approval. At this point, no transaction has been added to the order and when you consult it using the Queries service, the response only shows the transaction of the payment approval. APPROVED: the request has been approved by a PayU\u0026rsquo;s customer service agent. At this point the order has changed its state to CANCELLED or REFUNDEDstate and a PayU adds a REFUND transaction to the order with approved state. DECLINED: the request does not meet the policies defined by PayU and was cancelled by an agent. when the refund is declined, PayU adds a REFUND transaction to the order with declined state.  For more information about authorized and captured transactions, refer to Payments.\nConsiderations Before using either VOID or REFUND feature, take into account the following considerations:\n Refund or Void method are only available for transactions made with a credit card. If the request refers to a different payment means such as cash payment means, bank transfer; the request is declined by PayUÂ´s customer service agent. PayU only creates one application for each refund request, if a request is repeatedly posted for the same transaction, PayU indicates that the request is already registered. PayU only accepts refund requests of transactions in the Captured state. You can retry the refund request if this was previously declined. Once you make the request, the transaction amount becomes part of the Frozen Balance of your PayU account until it is processed.  If your refund request is APPROVED, the amount is refunded to the card holder. If your refund request is DECLINED, the amount is released from the Frozen Balance and returns to the available Balance of your PayU account.   Once the refund is approved, this will be reflected in the payer\u0026rsquo;s credit card when the bank make it effective.  What\u0026rsquo;s next? The integration with this feature can be performed using one of our integration types:\n For API integrations, refer to this topic For SDK integrations, refer to this topic  ","excerpt":"You can create the refund request using the Refund or Void method. Once you have created the â€¦","ref":"/docs/services/refunds.html","title":"Voids and Refunds"},{"body":"OpenCart is a free platform developed in PHP to create online stores. OpenCart provides a professional and reliable base to build an online store. This base uses a wide variety of users such as web developers looking for a user-friendly interface or store owners who want to launch their online business for the first time. OpenCart has many features that give you great control over your store\u0026rsquo;s customization.For more information about WooCommerce, refer to their official website.\nPrerequisites The OpenCart plugin is available for version 1.5 and 2.0 and you need to meet the following prerequisites:\n You need an active account in PayU Latam. For OpenCart version 1.5:  Having the PayU\u0026rsquo;s OpenCart v1.5 plugin downloaded and stored in an accessible location. Click here to download it. Having VirtueMart version 1.5.5.1 - 1.5.6.X installed.   For OpenCart version 2.0:  Having the PayU\u0026rsquo;s OpenCart v2.0 plugin downloaded and stored in an accessible location. Click here to download it. Having VirtueMart version 2.0.1.0 or 2.0.1.1 installed.    Installation and configuration The procedure to install OpenCart plugin is the same for version 1.5 or 2.0. The only difference is the look and feel of the versions and this is highlighted during this article.\nFollow the next procedure to install the plugin on your website.\n Unzip the plugin file in a location of your choice. Then, using an FTP client, go to the location where you unzipped the plugin.\nThen, upload the folders admin and catalog to the root folder of the OpenCart installation in your server.  This action add the plugin files to your OpenCart server in the right locations. To validate whether the procedure was correct, search the following files in their corresponding locations.\nIn the administration console of your OpenCart shop, open the Extensions menu and click Payments.  OpenCart v1.5\nOpenCart v2.0\nIn the Payment table, find the PayuLatam payment method. Then, click Install.  OpenCart v1.5\nOpenCart v2.0\nWhen the plugin has been installed, click Edit.  OpenCart v1.5\nOpenCart v2.0\nConfigure the payment method using the data of your PayU account as follows.     Field Value     Production Url PayU Latam\u0026rsquo;s URL in production https://gateway.payulatam.com/ppp-web-gateway/   Test Url PayU Latam\u0026rsquo;s URL in test https://sandbox.gateway.payulatam.com/ppp-web-gateway   Test Mode? Set Yes to make transactions in the test environment and No for the production environment.   Merchant ID ID of your commerce in PayU Latam   Account ID ID of the PayU account according to the country where you want to sell.   API key Unique key of your commerce, you can find this key in the PayU module.   Approved Transaction Order status in the OpenCart shop when PayU Latam approves the transaction.   Pending Transaction Order status in the OpenCart shop when the transaction is pending in PayU Latam.   Declined Transaction Order status in the OpenCart shop when PayU Latam declines the transaction.   Status Select Enable to activate this payment method in OpenCart.    Finally, save the changes. At this point, your customers can pay with PayU Latam when they do the checkout in the OpenCart\u0026rsquo;s shopping cart.  ","excerpt":"OpenCart is a free platform developed in PHP to create online stores. OpenCart provides a â€¦","ref":"/docs/tools/shopping-cart-plugins/opencart.html","title":"OpenCart"},{"body":"This solution is useful for businesses who need to receive payments on a regular basis such as paying memberships, courses, memberships or catalog and telesales, and more.\nYou can receive payments without any technical knowledge. You just need to send an email where your client can download the coupon and makes the respective payment.\n","excerpt":"This solution is useful for businesses who need to receive payments on a regular basis such as â€¦","ref":"/docs/tools/payment-coupons.html","title":"Payment Coupons"},{"body":"We provide a set of services and tools to let you receive payments, download reports, manage disputes and more.\nIdeally suited for\n All types and size of payments Products and services across all categories Businesses of any size or stage  Benefits of online payments   Increase your sales Expand the scope of your business by offering various payment methods.\n  Accept payments faster See an overview of all your transactions in our system. Consolidate and monitor your sales in the PayU dashboard.\n  Multi-acquisition We are integrated with all processing networks, which can increase your approval rate by up to 5%.\n  How does PayU work? To understand how PayU processes payments, it is important to understand two main concepts:\n Order: an order in PayU is defined as the set of movements related to an online payment. Transaction: any movement related to an order such as charges, retries, refunds, disputes, etc.  For example, a customer purchase a product using the your web page, the customer pays using their credit card and the payment is approved and accepted by the customer\u0026rsquo;s bank; Then, the shop finds that they don\u0026rsquo;t have enough stock of this product and request a refund to PayU. PayU, approves the refund and the money is returned to the customer. In this case, the order was the purchase of the product and this order has many transactions such as, the accept of the payment, the charge, the refund approval.\nHow to start using PayU? When you want to integrate your commerce with PayU services and tools, you need to consider the following steps.\n1. Create a PayU account Create your PayU account free of charge. Contact us to support you through the process.\n2. Select how you want to integrate with PayU services and tools. According to your business needs, select how to integrate your shop with the PayU services and tools.\n3. Perform tests Verify that your integration works as expected.\n4. Deploy to production After you perform all the system testing and you have verified that everything is working properly, you can change to the production server; where the actual transactions are processed.\nServices PayU provides the following services.\nPayments Lets your shop process different transaction types with multiple payment methods.\n Queries Lets you check the status of the transactions generated from placed orders.\n Tokenization Lets you safely store the data of your customers' credit cards through the creation of a token.\n Promotions Lets you consult the valid promotions, along with their associate costs, characteristics, and further relevant information available for your customers.\nApplies only to Argentina.\n Refunds Lets you request the cancellation and refund of the transactions paid with credit cards.\n  \n   PayU Tools PayU provides the following tools to give you more options to sell and receive payments online.\nPayment request Receive payments even if you don't have a web page.\n Shopping cart plugins Integrate your shopping cart solution with any of our available plugins.\n PayU module Manage your PayU account, generate sales reports, query your account balance or transfer money to your bank account.\n Reports See the overview of your account including, your sales, your financial statement, and your custom reports.\n Disputes Manage the dispute processes generated in your PayU account.\n Payment coupons Send payment coupons to your customers, they can pay in the cash branches available.\n   Checkout integration PayU Checkout is an integration that allows you to collect through a PayU web form from any device in a simple, fast and secure way.  PayU manages the payment system Easier integration, equally secure Since PayU manages the payment platform, it is easier to get PCI DSS certification  Learn more about WebCheckout integration  API or SDK integration Through API or SDK integrations, you can receive payments securely from anywhere you like, on your website or mobile app.  Design your checkout and manage the payment system of your website. Access to additional services such as Tokenization or Recurring payments  Learn more about API integration Learn more about SDK integration     -- What\u0026rsquo;s next? ","excerpt":"We provide a set of services and tools to let you receive payments, download reports, manage â€¦","ref":"/docs.html","title":"Online Payments"},{"body":"window.location.href = \"https://ecommerce.payulatam.com/manual-secure/manual.html\"   ","excerpt":"window.location.href = \"https://ecommerce.payulatam.com/manual-secure/manual.html\"   ","ref":"/payu-module-documentation.html","title":"PayU Module guide"},{"body":"","excerpt":"","ref":"/search.html","title":"Search Results"},{"body":"  #td-cover-block-0 { background-image: url(/DevelopersDoc_site/featured-trans-background_hue6a6bc7680f7602878761a2475d7f8d8_424180_960x540_fill_q75_catmullrom_top.jpg); } @media only screen and (min-width: 1200px) { #td-cover-block-0 { background-image: url(/DevelopersDoc_site/featured-trans-background_hue6a6bc7680f7602878761a2475d7f8d8_424180_1920x1080_fill_q75_catmullrom_top.jpg); } }  PayU Developers documentation Learn easily how to integrate your merchant with PayU services and manage your PayU account. Developers guide Learn how to use use PayU services and tools to easily integrate with your shop.\n PayU Module guide Learn how to register in your PayU account and manage it.\n Support Need some help?\nWe're here to support.           Other Resources Our blog is dedicated to sharing the thoughts of industry influencers from across the payments and e-commerce sectors.\nOur Payment Insiders Guides reflect the most up-to-date information in the payments' world and are aimed to equip payment insiders with the tools and knowledge to thoroughly understand global trends, regulations and procedures.\n   -- ","excerpt":"#td-cover-block-0 { background-image: â€¦","ref":"/","title":"TechOS"}]